--Khaja

GO
/****** Object:  StoredProcedure [dbo].[spRPT_StockBalance]    Script Date: 23-09-2025 18:37:51 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spRPT_StockBalance]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[spRPT_StockBalance]
GO
/****** Object:  StoredProcedure [dbo].[spRPT_OpenCompanyData]    Script Date: 23-09-2025 18:37:51 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spRPT_OpenCompanyData]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[spRPT_OpenCompanyData]
GO
/****** Object:  StoredProcedure [dbo].[spRPT_OpenCompanyData]    Script Date: 23-09-2025 18:37:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spRPT_OpenCompanyData]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'-- =============================================  
-- Author:  Adil  
-- Create date: 09 July 2012
-- Description: To Get Open Company Data
-- EXAMPLE :
-- [spRPT_OpenCompanyData] ''30 Mar 2012'','''',0,0,0,1,1
-- =============================================  
CREATE procedure [dbo].[spRPT_OpenCompanyData]
@ReportType INT,
@FromDate DATETIME,
@ToDate DATETIME,
@TagID int,
@LocationWHERE NVARCHAR(MAX)=NULL,
@GetAllIncomeExpBalance BIT=1,
@UnapprovedDocs NVARCHAR(200),
@IncludePDC BIT=0,
@IncludeTerminatedPDC BIT=1,
@YearXML NVARCHAR(MAX),
@CurrencyType INT,
@CurrencyID INT,
@ExchRate FLOAT,
@UserID INT,
@LangID INT
AS  
BEGIN TRY  
SET NOCOUNT ON;  

	DECLARE @SQL NVARCHAR(MAX),@TempFromDate FLOAT,@ACCJOIN NVARCHAR(MAX),@INVJOIN NVARCHAR(MAX),@TblAccJOIN NVARCHAR(MAX),@LWFinalization bit
	,@AmtColumn NVARCHAR(20),@CurrWHERE NVARCHAR(max),@Tag1 nvarchar(200),@Tag2 nvarchar(200),@Tag3 nvarchar(200),@Tag4 nvarchar(200)
	CREATE TABLE #TblAcc(AccountID INT,FromDate FLOAT,ToDate FLOAT,LocationID INT)
	CREATE NONCLUSTERED INDEX [TblAcc_Index] ON #TblAcc(FromDate ASC,ToDate ASC)

	CREATE TABLE #TblYearBalance(Mn NVARCHAR(20),AccountID INT,Dr FLOAT,Cr FLOAT)
	CREATE TABLE #TblDates(ID INT IDENTITY(1,1),Mn NVARCHAR(10),StartDate FLOAT)
	
	if exists (select 1 from adm_globalpreferences with(nolock) where Name=''EnableLocationWise'' and Value=''True'') 
		and exists (select 1 from adm_globalpreferences with(nolock) where Name=''LWFinalization'' and Value=''True'')
		set @LWFinalization=1
	else
		set @LWFinalization=0
	
	if @GetAllIncomeExpBalance=1
		set @TblAccJOIN=''left join #TblAcc Y with(nolock) on ACC.DocDate BETWEEN Y.FromDate AND Y.ToDate''
	else
		set @TblAccJOIN=''join #TblAcc Y with(nolock) on ACC.DocDate BETWEEN Y.FromDate AND Y.ToDate''
	if @LWFinalization=1
		set @TblAccJOIN=@TblAccJOIN+'' and DCC.dcCCNID2=Y.LocationID''

	IF @CurrencyID>0
	BEGIN
		SET @AmtColumn=''AmountFC''
		SET @CurrWHERE='' AND ACC.CurrencyID=''+CONVERT(NVARCHAR,@CurrencyID)
	END
	ELSE
	BEGIN
		IF @CurrencyType=1
			SET @AmtColumn=''AmountBC''
		ELSE
			SET @AmtColumn=''Amount''
		SET @CurrWHERE=''''
		
		IF @ExchRate>0
		BEGIN
			SET @AmtColumn=''Amount/''+convert(nvarchar,@ExchRate)
		END		
	END
	
	set @Tag1=''''
	set @Tag2=''''
	set @Tag3=''''
	set @Tag4=''''
	if @TagID>50000
	begin
		if exists (select 1 from adm_globalPreferences with(nolock) where Name=''ReportDims'' and Value like ''%''+convert(nvarchar,@TagID)+''%'')
		begin
			set @Tag1='',ACC.CNID''+convert(nvarchar,(@TagID-50000))
			set @Tag2='',ACC.CNID''+convert(nvarchar,(@TagID-50000))+'' TagID''
		end
		else
		begin
			set @Tag1='',DCC.dcCCNID''+convert(nvarchar,(@TagID-50000))
			set @Tag2='',DCC.dcCCNID''+convert(nvarchar,(@TagID-50000))+'' TagID''
		end
		set @Tag3='',TagID''
		set @Tag4='',TagID''
	end
	
	/*set @Tag1=@Tag1+'',Y.FromDate''
	set @Tag2=@Tag2+'',Y.FromDate''
	set @Tag3=@Tag3+'',FromDate''
	set @Tag4=@Tag4+'',convert(datetime,FromDate) FromDate''*/

	DECLARE @UnAppSQL nvarchar(max),@PDCWhere nvarchar(max),@AccountTypeFilter nvarchar(100)
	
	if @ReportType=7
		set @AccountTypeFilter=''1,2,3,6,7,10,13,14,15,16''
	else
		set @AccountTypeFilter=''4,5,8,9,11,12''
	
	if @UnapprovedDocs=''''
		set @UnAppSQL='' AND (ACC.StatusID=369 or ACC.StatusID=429)''
	else
		set @UnAppSQL='' AND ACC.StatusID IN (369,429,''+@UnapprovedDocs+'')''

	if @IncludePDC=1
	begin
		declare @Temp nvarchar(200)
		SET @Temp=''(ACC.StatusID=370 OR ACC.StatusID=439''
		IF @IncludeTerminatedPDC=1
			SET @Temp=@Temp+'' OR ACC.StatusID=452''
		SET @Temp=@Temp+'')''
		set @PDCWhere='' AND ACC.DocumentType<>16 AND (''+@Temp+'' OR (ACC.DocumentType<>14 AND ACC.DocumentType<>19''+@UnAppSQL+ ''))''
	end
	else
		set @PDCWhere='' AND ACC.DocumentType NOT IN (16,14,19)''+@UnAppSQL;

	if @ReportType=7 --and @YearXML=''''
		set @TempFromDate=CONVERT(FLOAT,@ToDate)+1
	else
		set @TempFromDate=CONVERT(FLOAT,@FromDate)

	if (@LWFinalization=1 or @Tag1 like ''%dcCCNID%'' or (@LocationWHERE IS NOT NULL AND @LocationWHERE!='''' and @LocationWHERE like ''%dcCCNID%''))
	begin
		if @LocationWHERE is null
			set @LocationWHERE=''''
		set @ACCJOIN='' INNER JOIN COM_DocCCData DCC WITH(NOLOCK) ON DCC.AccDocDetailsID=ACC.AccDocDetailsID ''
		set @INVJOIN='' INNER JOIN COM_DocCCData DCC WITH(NOLOCK) ON DCC.InvDocDetailsID=ACC.InvDocDetailsID ''
	end
	else
	begin
		set @ACCJOIN=''''
		set @INVJOIN=''''
	end
	
	set @CurrWHERE=@CurrWHERE+isnull(@LocationWHERE,'''')
	
	SET @SQL=''SELECT Y.AccountID AccountID,ACC.VoucherNo''+@Tag2+'',CONVERT(DECIMAL(38,5),ISNULL(sum(ACC.''+@AmtColumn+''),0)) Dr, 0 Cr,ACC.DebitAccount TAccount
		FROM ACC_DocDetails ACC WITH(NOLOCK)''+@ACCJOIN+''
		''+@TblAccJOIN+''
		WHERE ACC.DebitAccount>1 and ACC.DocDate<@TempFromDate''+@PDCWhere+@CurrWHERE+''
		GROUP BY Y.AccountID,ACC.VoucherNo,ACC.DebitAccount''+@Tag1+''
		UNION ALL
		SELECT Y.AccountID AccountID,ACC.VoucherNo''+@Tag2+'',0 Dr,CONVERT(DECIMAL(38,5),ISNULL(sum(ACC.''+@AmtColumn+''),0)) Cr,ACC.CreditAccount TAccount
		FROM ACC_DocDetails ACC WITH(NOLOCK)''+@ACCJOIN+''
		''+@TblAccJOIN+''
		WHERE ACC.CreditAccount>1 and ACC.DocDate<@TempFromDate''+@PDCWhere+@CurrWHERE+''
		GROUP BY Y.AccountID,ACC.VoucherNo,ACC.CreditAccount''+@Tag1+''
		''	
		IF @ACCJOIN!=''''
		BEGIN
			SET @SQL=@SQL+''
			--Inventory Data
				UNION ALL
				SELECT Y.AccountID AccountID,ACC.VoucherNo''+@Tag2+'',CONVERT(DECIMAL(38,5),ISNULL(sum(ACC.''+@AmtColumn+''),0)) Dr, 0 Cr,ACC.DebitAccount TAccount
				FROM ACC_DocDetails ACC WITH(NOLOCK)''+@INVJOIN+''			
				''+@TblAccJOIN+''
				WHERE ACC.DebitAccount>1 and ACC.DocDate<@TempFromDate''+@PDCWhere+@CurrWHERE+''
				GROUP BY Y.AccountID,ACC.VoucherNo,ACC.DebitAccount''+@Tag1+''
				UNION ALL
				SELECT Y.AccountID AccountID,ACC.VoucherNo''+@Tag2+'',0 Dr,CONVERT(DECIMAL(38,5),ISNULL(sum(ACC.''+@AmtColumn+''),0)) Cr,ACC.CreditAccount TAccount
				FROM ACC_DocDetails ACC WITH(NOLOCK)''+@INVJOIN+''
				''+@TblAccJOIN+''
				WHERE ACC.CreditAccount>1 and ACC.DocDate<@TempFromDate''+@PDCWhere+@CurrWHERE+''
				GROUP BY Y.AccountID,ACC.VoucherNo,ACC.CreditAccount''+@Tag1
		END

		SET @SQL=''DECLARE @TempFromDate FLOAT
		SET @TempFromDate=''+CONVERT(NVARCHAR,@TempFromDate)+''
		SELECT T.AccountID''+@Tag4+'',SUM(Dr) Dr,SUM(Cr) Cr FROM (
		''+@SQL+''
	) AS T
	INNER JOIN ACC_Accounts A WITH(NOLOCK) ON A.AccountID=T.TAccount AND A.AccountTypeID IN (''+@AccountTypeFilter+'')
	GROUP BY T.AccountID''+@Tag3

	if @YearXML!=''''
	BEGIN
		DECLARE @XML xml,@I INT,@CNT INT,@TempYearFromDate FLOAT,@ColID NVARCHAR(20)
		SET @XML=@YearXML
		INSERT INTO #TblDates
		SELECT X.value(''@ID'',''NVARCHAR(20)''),convert(float,X.value(''@EndDate'',''DATETIME'')) 		
		FROM @XML.nodes(''XML/Row'') as Data(X)  
	
		--select CONVERT(DATETIME,StartDate),* from #TblDates
		select @I=1,@CNT=COUNT(*) from #TblDates with(nolock)
		while(@I<=@CNT)
		begin
			SELECT @ColID=Mn,@TempYearFromDate=StartDate FROM #TblDates with(nolock) WHERE ID=@I
			
			TRUNCATE TABLE #TblAcc
			
			if @ReportType=7
			begin
				INSERT INTO #TblAcc
				SELECT AccountID,FromDate,ToDate,LocationID FROM ADM_FinancialYears WITH(NOLOCK) 
				WHERE @TempYearFromDate between FromDate and ToDate

				SET @TempYearFromDate=CONVERT(FLOAT,DATEADD(D,-1,DATEADD(M,1,CONVERT(DATETIME,@TempYearFromDate))))

				UPDATE #TblAcc	SET ToDate=CONVERT(FLOAT,@TempYearFromDate)--CONVERT(FLOAT,@ToDate)-1 removed for BS error of THARAWAT	
				WHERE ToDate>=CONVERT(FLOAT,@TempYearFromDate)

			end
			else
			begin
				INSERT INTO #TblAcc
				SELECT AccountID,FromDate,ToDate,LocationID FROM ADM_FinancialYears WITH(NOLOCK) 
				WHERE FromDate<@TempYearFromDate
				
				UPDATE #TblAcc SET ToDate=@TempYearFromDate-1
				WHERE ToDate>=@TempYearFromDate
			
				UPDATE #TblAcc SET ToDate=@TempYearFromDate-1
				WHERE ToDate>=@TempYearFromDate
			end
			--SELECT CONVERT(DATETIME,FromDate),CONVERT(DATETIME,ToDate) FROM #TblAcc
			SET @I=@I+1
			INSERT INTO #TblYearBalance(AccountID,Dr,Cr)
			EXEC sp_executesql @SQL
		
			print(@SQL)
			
			UPDATE #TblYearBalance
			SET Mn=@ColID
			WHERE Mn IS NULL
		end

		SELECT * FROM #TblYearBalance with(nolock)
		
		--Refreshing Year Slots
		TRUNCATE TABLE #TblAcc
		SET @TempFromDate=CONVERT(FLOAT,@FromDate)

		INSERT INTO #TblAcc
		SELECT AccountID,FromDate,ToDate,-1
		FROM ADM_FinancialYears WITH(NOLOCK) 
		WHERE FromDate<@TempFromDate
		
		UPDATE #TblAcc
		SET ToDate=@TempFromDate-1
		WHERE ToDate>=@TempFromDate
	END
	ELSE
	BEGIN
		if @ReportType=7
		begin
			INSERT INTO #TblAcc
			SELECT AccountID,FromDate,ToDate,LocationID FROM ADM_FinancialYears WITH(NOLOCK) 
			WHERE FromDate<=@ToDate
			
			UPDATE #TblAcc	SET ToDate=CONVERT(FLOAT,@ToDate)--CONVERT(FLOAT,@ToDate)-1 removed for BS error of THARAWAT	
			WHERE ToDate>=CONVERT(FLOAT,@ToDate)
		end
		else
		begin
			INSERT INTO #TblAcc
			SELECT AccountID,FromDate,ToDate,LocationID FROM ADM_FinancialYears WITH(NOLOCK) 
			WHERE FromDate<@TempFromDate
			
			UPDATE #TblAcc	SET ToDate=@TempFromDate-1
			WHERE ToDate>=@TempFromDate
		end
		
		--Check For User-Wise Accounts
		if @UserID!=1
		begin
			declare @UserDims nvarchar(max)
			declare @TblUserDims as table(ID INT)
			select @UserDims=Value from ADM_GlobalPreferences with(nolock) where Name=''Dimension List''
			insert into @TblUserDims
			exec SPSplitString @UserDims,'',''
			if exists (select ID from @TblUserDims where ID=2)
			begin
				delete from #TblAcc where AccountID not in (
					select T.AccountID from Acc_Accounts A with(nolock)
					join #TblAcc T with(nolock) on T.AccountID=A.AccountID
					where A.AccountID in (select ParentNodeID from COM_CostCenterCostCenterMap with(nolock) where ParentCostCenterID=2 and CostCenterID=7 AND NodeID=@UserID)
					or A.CreatedBy=(select UserName from ADM_Users with(nolock) where UserID=@UserID)
				)
			end
		end

		--select *,convert(datetime,fromdate) fromdate,convert(datetime,Todate) Todate from #TblAcc
		print(@SQL)
		EXEC sp_executesql @SQL
	END
	
	set @ToDate=null
	set @FromDate=null
	SELECT @ToDate=CONVERT(DATETIME,MAX(ToDate)),@FromDate=CONVERT(DATETIME,MIN(FromDate)) from #TblAcc with(nolock)
	SELECT @ToDate PreviousYearEndDate
		,(SELECT top 1 AccountID from #TblAcc with(nolock) where FromDate=convert(int,@FromDate)) FirstAccount
		,(SELECT top 1 AccountID from #TblAcc with(nolock) where ToDate=convert(int,@ToDate)) LastAccount
	
	;WITH Ranges AS (
	SELECT T.AccountID,T.FromDate,T.ToDate,
	CASE WHEN EXISTS (SELECT 1 FROM #TblAcc P with(nolock) WHERE P.AccountID=T.AccountID AND P.ToDate+1=T.FromDate) THEN 0 ELSE 1 END IsNew
	from #TblAcc T with(nolock)
	)
	,Grouped AS(
	select m.*,(select sum(IsNew) from Ranges x where x.AccountID=m.AccountID AND x.FromDate<=m.FromDate) Grp from Ranges m ) 
	select AccountID,convert(datetime,MIN(FromDate)) FromDate,convert(datetime,MAX(ToDate)) ToDate from Grouped 
	GROUP BY AccountID,Grp order by FromDate

	DROP TABLE #TblAcc

SET NOCOUNT OFF;  
RETURN 1
END TRY
BEGIN CATCH  
	--Return exception info [Message,Number,ProcedureName,LineNumber]  
	IF ERROR_NUMBER()=50000
	BEGIN
		SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=@LangID
	END
	ELSE
	BEGIN
		SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() AS ErrorNumber, ERROR_PROCEDURE()AS ProcedureName, ERROR_LINE() AS ErrorLine
		FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=-999 AND LanguageID=@LangID
	END
SET NOCOUNT OFF  
RETURN -999   
END CATCH
' 
END
GO
/****** Object:  StoredProcedure [dbo].[spRPT_StockBalance]    Script Date: 23-09-2025 18:37:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spRPT_StockBalance]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'-- =============================================  
-- Author:  Adil  
-- Create date: 04 Oct 2011  
-- Description: Get a rec & iss qty
-- EXAMPLE:
-- [spRPT_StockBalance] 2,NULL,''27 sep 2010'',''30 sep 2012''
-- =============================================  
CREATE procedure [dbo].[spRPT_StockBalance]
	@BalanceType BIT,--0 For Closing, 1 For Opening
	@LocationWHERE NVARCHAR(MAX)='''',
	@FromDate DATETIME,
	@ToDate DATETIME,
	@IncludeUpPostedDocs BIT,
	@CurrencyType INT,
	@CurrencyID INT=0,
	@IsOuputCall INT=0,
	@Level INT=0,
	@FCWithExchRate FLOAT=0,
	@Bal FLOAT OUTPUT
AS  
SET NOCOUNT ON;  

	DECLARE @TblProducts AS TABLE(ProductID INT)
	DECLARE @SPInvoice cursor, @nStatusOuter int
	DECLARE @ProductID INT,@SQL NVARCHAR(MAX),@TagSQL NVARCHAR(MAX),@From nvarchar(20),@To nvarchar(20),@UnAppSQL nvarchar(50)
	DECLARE @Qty FLOAT,@AvgRate FLOAT,@StockValue FLOAT,@COGS FLOAT,@CurrWHERE nvarchar(30),@SortTransactionsBy nvarchar(50)

	set @From=convert(nvarchar,convert(float,@FromDate))
	set @To=convert(nvarchar,convert(float,@ToDate))
	
	SET @TagSQL=''''
	
	IF @LocationWHERE IS NOT NULL AND @LocationWHERE<>''''
		SET @TagSQL='' INNER JOIN COM_DocCCData DCC WITH(nolock) ON DCC.InvDocDetailsID=D.InvDocDetailsID''+@LocationWHERE
	ELSE
		SET @LocationWHERE=''''
		
	IF @BalanceType=0 and exists (SELECT 1 FROM ADM_FinancialYears with(nolock) where InvClose=1 and ToDate=convert(int,@ToDate))
	BEGIN
		SET @SQL=''
		SELECT @Bal=sum(DCC.BalValue)
		FROM INV_ProductClose DCC WITH(NOLOCK)
		INNER JOIN INV_Product P WITH(NOLOCK) ON P.ProductID=DCC.ProductID
		WHERE DCC.CloseDate=''+convert(nvarchar,convert(int,@ToDate))+@LocationWHERE
		EXEC sp_executesql @SQL,N''@Bal float output'',@Bal OUTPUT
		select @Bal Balance
		
		IF (@Level>0)
		BEGIN
			SET @SQL=REPLACE(REPLACE(@SQL,''@Bal=sum(DCC.BalValue)'',''GT.ProductID,GT.ProductName,sum(DCC.BalValue) Balance''),''WHERE'',''JOIN (SELECT GP.ProductID,GP.ProductName,GP.Lft,GP.Rgt 
	FROM INV_Product GP WITH(NOLOCK) 
	WHERE GP.Depth=''+CONVERT(NVARCHAR,@Level)+'') AS GT ON P.Lft BETWEEN GT.Lft AND GT.Rgt WHERE'')+'' 
			GROUP BY GT.ProductID,GT.ProductName
			HAVING SUM(DCC.StockValue)<>0''
			EXEC (@SQL)
		END
		ELSE 
			SELECT 1 Balance WHERE 1<>1
		
		return 1
	END
	
	IF @IncludeUpPostedDocs=0
		SET @UnAppSQL='' AND D.StatusID=369''
	ELSE
		SET @UnAppSQL=''''
		
	IF @CurrencyID>0
		SET @CurrWHERE='' AND D.CurrencyID=''+CONVERT(NVARCHAR,@CurrencyID)
	ELSE
		SET @CurrWHERE=''''
	
	IF @BalanceType=1 AND EXISTS (SELECT 1 FROM PACT2C.dbo.ADM_Company WITH(NOLOCK) WHERE DBIndex=CONVERT(INT,REPLACE(DB_NAME(),''PACT2C'','''')) AND AccountingDate=@From)
	BEGIN
		SET @SQL=''SELECT @Bal=sum(D.StockValue)
		FROM Inv_DocDetails D WITH(NOLOCK)''+@TagSQL+''
		INNER JOIN INV_Product P WITH(NOLOCK) ON P.ProductID=D.ProductID
		WHERE D.DocumentType=3 AND P.ProductTypeId<>6 AND P.ProductTypeId<>10 ''+@UnAppSQL+@CurrWHERE
		
		EXEC sp_executesql @SQL,N''@Bal float output'',@Bal OUTPUT
		select @Bal Balance
		
		IF (@Level>0)
		BEGIN
			SET @SQL=REPLACE(REPLACE(@SQL,''@Bal=sum(D.StockValue)'',''GT.ProductID,GT.ProductName,sum(D.StockValue) Balance''),''WHERE'',''JOIN (SELECT GP.ProductID,GP.ProductName,GP.Lft,GP.Rgt 
			FROM INV_Product GP WITH(NOLOCK) 
			WHERE GP.Depth=''+CONVERT(NVARCHAR,@Level)+'') AS GT ON P.Lft BETWEEN GT.Lft AND GT.Rgt WHERE'')+'' 
			GROUP BY GT.ProductID,GT.ProductName
			HAVING SUM(D.StockValue)<>0''
			EXEC (@SQL)
		END
		ELSE 
			SELECT 1 Balance WHERE 1<>1
		return 1
	END

	IF @BalanceType=1
	BEGIN
		SET @SQL=''SELECT D.ProductID
		FROM Inv_DocDetails D WITH(NOLOCK)''+@TagSQL+''
		INNER JOIN INV_Product P WITH(NOLOCK) ON P.ProductID=D.ProductID
		WHERE (VoucherType=1 OR VoucherType=-1) AND IsQtyIgnored=0 AND P.ProductTypeId<>6 AND P.ProductTypeId<>10 and (D.DocDate<''+@From+'' OR (D.DocumentType=3 AND D.DocDate<=''+@To+''))''+@UnAppSQL+@CurrWHERE+''
		GROUP BY D.ProductID
		HAVING sum(VoucherType*UOMConvertedQty)>0''
		--print(@SQL)
		INSERT INTO @TblProducts
		EXEC(@SQL)
	END
	ELSE
	BEGIN
		SET @SQL=''SELECT D.ProductID
		FROM Inv_DocDetails D WITH(NOLOCK)''+@TagSQL+''
		INNER JOIN INV_Product P WITH(NOLOCK) ON P.ProductID=D.ProductID
		WHERE (VoucherType=1 OR VoucherType=-1) AND IsQtyIgnored=0 AND P.ProductTypeId<>6 AND P.ProductTypeId<>10 and D.DocDate<=''+@To+@UnAppSQL+@CurrWHERE+''
		GROUP BY D.ProductID
		HAVING sum(VoucherType*UOMConvertedQty)>0''
		--print(@SQL)
		INSERT INTO @TblProducts
		EXEC(@SQL)
		--PRINT(@SQL)
	END
	
	SET @SortTransactionsBy=''''
	IF EXISTS (SELECT 1 FROM [ADM_GlobalPreferences] WITH(NOLOCK) WHERE Name=''SortAvgRate'' AND Value=''True'') 
	AND EXISTS (SELECT 1 FROM [ADM_GlobalPreferences] WITH(NOLOCK) WHERE Name=''AvgRateBasedOn'' AND Value IS NOT NULL AND Value<>'''')
		SELECT @SortTransactionsBy=Value FROM [ADM_GlobalPreferences] WITH(NOLOCK) WHERE Name=''AvgRateBasedOn''
	
	SET @SPInvoice = cursor for 
	SELECT ProductID FROM @TblProducts
	--SELECT ProductID,ValuationID FROM INV_Product WHERE IsGroup=0
	
	
	DECLARE @Tbl AS TABLE(ProductID INT,Qty FLOAT,AvgRate FLOAT,StockValue FLOAT)
	
	OPEN @SPInvoice 
	SET @nStatusOuter = @@FETCH_STATUS
	
	FETCH NEXT FROM @SPInvoice Into @ProductID
	SET @nStatusOuter = @@FETCH_STATUS
	
	WHILE(@nStatusOuter <> -1)
	BEGIN

		EXEC [spRPT_AvgRate] @BalanceType,@ProductID,@LocationWHERE,'''',@FromDate,@ToDate,@IncludeUpPostedDocs,0,@CurrencyType,@CurrencyID,@SortTransactionsBy,@FCWithExchRate,0,@Qty OUTPUT,@AvgRate OUTPUT,@StockValue OUTPUT,@COGS OUTPUT
		
		IF @Qty>0
		BEGIN
			INSERT INTO @Tbl(ProductID,Qty,AvgRate,StockValue)
			VALUES(@ProductID,@Qty,@AvgRate,@StockValue)
		END
	--	select @ProductID
	
	--print(@ProductID)
	
		FETCH NEXT FROM @SPInvoice Into @ProductID
		SET @nStatusOuter = @@FETCH_STATUS
	END
	
	SELECT @Bal=SUM(StockValue) FROM @Tbl
		
	IF @IsOuputCall=0
		SELECT @Bal Balance
	ELSE 
		SELECT 1 Balance WHERE 1<>1
	
	IF (@Level>0)
		SELECT GT.ProductID,GT.ProductName,SUM(D.StockValue) Balance FROM @Tbl D
		INNER JOIN INV_Product P WITH(NOLOCK) ON P.ProductID=D.ProductID
		JOIN (SELECT GP.ProductID,GP.ProductName,GP.Lft,GP.Rgt 
		FROM INV_Product GP WITH(NOLOCK) 
		WHERE GP.Depth=@Level) AS GT ON P.Lft BETWEEN GT.Lft AND GT.Rgt
		GROUP BY GT.ProductID,GT.ProductName
		HAVING SUM(D.StockValue)<>0
	ELSE 
		SELECT 1 Balance WHERE 1<>1
' 
END
GO
