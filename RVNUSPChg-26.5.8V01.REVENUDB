-- SHASHANK

/****** Object:  StoredProcedure [dbo].[spDOC_GetVPTDocumentsData]    Script Date: 29-09-2025 17:02:05 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spDOC_GetVPTDocumentsData]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[spDOC_GetVPTDocumentsData]
GO
/****** Object:  StoredProcedure [dbo].[spCOM_SetStatusMasters]    Script Date: 29-09-2025 17:02:05 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spCOM_SetStatusMasters]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[spCOM_SetStatusMasters]
GO
/****** Object:  StoredProcedure [dbo].[spCOM_SetStatusMasters]    Script Date: 29-09-2025 17:02:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spCOM_SetStatusMasters]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N' 
 CREATE PROCEDURE [dbo].[spCOM_SetStatusMasters]
	@COSTCENTERID [int],
	@NODEID [int],
	@IsApprove [bit],
	@REMARKS [nvarchar](max),
	@CCGUID [nvarchar](50),
	@CompanyGUID [nvarchar](50),
	@UserName [nvarchar](50),
	@UserID [int],
	@RoleID [int],
	@LangID [int] = 1

AS
BEGIN TRANSACTION      
BEGIN TRY      
SET NOCOUNT ON;     

	--Declaration Section    
	 DECLARE @temp nvarchar(100),@GUID  NVARCHAR(50),@Name nvarchar(100),@level int,@maxLevel INT,@tempLevel int,
	 @WID INT,@oldStatusID int,@STATUSID INT,@SQL nvarchar(max),@CStatusID INT, @Assigned INT=0
     DECLARE @sqlSelect nvarchar(max)
	 DECLARE @TabName varchar(1000),@PrimaryKey NVARCHAR(100),@tempCode NVARCHAR(MAX)

	--SP Required Parameters Check    
	IF @COSTCENTERID<0 OR @NODEID<0
	BEGIN    
		RAISERROR(''-100'',16,1)    
	END   
	 select @TabName = TableName,@PrimaryKey=PrimaryKey from ADM_Features  WITH(NOLOCK) where FeatureID=@CostCenterID		 
			 
     if(@CostCenterID =93)
			BEGIN	
	            set @sqlSelect='' SELECT @WID=WorkFlowID,@tempLevel=WorkFlowLevel,@GUID=[guid],@oldStatusID=ISNULL(Status,0) 
				FROM  ''+@TabName+'' WITH(NOLOCK) where   WorkFlowID>0 and UnitID=''+ convert(nvarchar,@NodeID) +'' ''
				print (@sqlSelect)
				EXEC sp_executesql @sqlSelect,N''@WID int output,@tempLevel int output,@GUID NVARCHAR(50) output,@oldStatusID int output'', @WID output,@tempLevel output,@GUID output ,@oldStatusID output

			END 
	  ELSE if(@CostCenterID in(2,3,94,92,86,72,83,76,89) or  @CostCenterID>=50000)
		BEGIN
			set @sqlSelect='' SELECT @WID=WorkFlowID,@tempLevel=WorkFlowLevel,@GUID=[guid],@oldStatusID=Statusid 
		   FROM  ''+@TabName+'' WITH(NOLOCK) where  ''+@PrimaryKey+'' =''+ convert(nvarchar,@NodeID) +'' ''
			print (@sqlSelect)
				EXEC sp_executesql @sqlSelect,N''@WID int output,@tempLevel int output,@GUID NVARCHAR(50) output,@oldStatusID int output'', @WID output,@tempLevel output,@GUID output ,@oldStatusID output

		END

		 
 
		
	SET @GUID=NEWID()

	 

		  if(@level is null )

			set @level=(SELECT  top 1  LevelID FROM [COM_WorkFlow]   WITH(NOLOCK) 
				where WorkFlowID=@WID and  UserID =@UserID)

		if(@level is null )
		set @level=(SELECT top 1 LevelID FROM [COM_WorkFlow]  WITH(NOLOCK)  
			where WorkFlowID=@WID and  RoleID =@RoleID)

		if(@level is null ) 
			set @level=(SELECT top 1  LevelID FROM [COM_WorkFlow]   WITH(NOLOCK) 
			where WorkFlowID=@WID and  GroupID in (select GroupID from COM_Groups WITH(NOLOCK) where UserID=@UserID))

		if(@level is null )
			set @level=( SELECT top 1  LevelID FROM [COM_WorkFlow] WITH(NOLOCK) 
			where WorkFlowID=@WID and  GroupID in (select GroupID from COM_Groups WITH(NOLOCK) 
			where RoleID =@RoleID))

		select @maxLevel=max(LevelID) from COM_WorkFlow WITH(NOLOCK)  where WorkFlowID=@WID  
		select @level,@maxLevel
		if(@level is not null and  @maxLevel is not null and @maxLevel>@level)
		begin
			IF(@CostCenterID=50051 AND @level>1)
			BEGIN			 
				set @StatusID=1002
			END
			ELSE
			BEGIN				 
				set @StatusID=1001
			END
		end	
		else
		--begin
		--	set @StatusID=@oldStatusID			 
		--end		
		begin
		if(@CostCenterID!=3)
			set @StatusID=@oldStatusID
			else			
			set @StatusID=1003

			 
		end
  
	select @maxLevel=max(LevelID) from COM_WorkFlow WITH(NOLOCK) where WorkFlowID=@WID
 
		
		
	if(@level is not null and  @maxLevel is not null and @maxLevel>@level)
	begin	
		IF(@level=1)
			set @StatusID=1001
		ELSE
		begin
			if @IsApprove=1
				set @StatusID=1002
			else
				set @StatusID=1003
		end
	END
	else if @IsApprove=1
	begin
	  if(@CostCenterID=2)
			BEGIN
				select @StatusID=1002
				select @CStatusID=NodeID from com_lookup with(nolock) where lookuptype=60 and IsDefault=1	
				if @CStatusID is null
					set @CStatusID=33
			END
		else if(@CostCenterID=3)
			BEGIN
				select @StatusID=1002
				select @CStatusID=NodeID from com_lookup with(nolock) where lookuptype=60 and IsDefault=1		
				if @CStatusID is null
					set @CStatusID=31
			END

		ELSE if(@CostCenterID>=50001)	 
			BEGIN				
				select @StatusID=1002
			    select @CStatusID=StatusID from COM_Status WITH(NOLOCK) where costcenterid=@CostCenterID and status=''Active''	
				
				if(@CostCenterID=50051)
				begin
					set @sql='' if exists(select * from com_cc50051 c51 with(nolock)
								join COM_Lookup l with(nolock) on l.nodeid=c51.emptype 
								where lookuptype=104 and c51.nodeid=''+convert(nvarchar,@NodeID)+'' and l.name=''''#Temporary#'''')
								begin
									set @CStatusID=251
								end
								else
								begin
									set @CStatusID=250
								end''
						print @sql
						exec sp_executesql @sql,N''@CStatusID int output'' , @CStatusID OUTPUT 
						
				end
						 
			    if @CStatusID is null
					set @CStatusID=43
			END
		ELSE if(@CostCenterID in(86))
		
			BEGIN
				select @StatusID=1002			 
				select @CStatusID=StatusID from COM_Status WITH(NOLOCK) where costcenterid=@CostCenterID and status=''Open''		 
				if @CStatusID is null
					set @CStatusID=415
			end
			ELSE if(@CostCenterID in(89))
		
			BEGIN
				select @StatusID=1002
				select @CStatusID=StatusID from COM_Status with(nolock) where CostCenterID=89 and [Status]=''Active''
				if @CStatusID is null
					set @CStatusID=333
			end
			ELSE if(@CostCenterID in(72))		
			BEGIN
				select @StatusID=1002
				select @CStatusID=StatusID from COM_Status with(nolock) where CostCenterID=@CostCenterID  
				if @CStatusID is null
					set @CStatusID=1
			end
			ELSE if(@CostCenterID in(76))		
			BEGIN
				select @StatusID=1002
				select @CStatusID=StatusID from COM_Status with(nolock) where CostCenterID=@CostCenterID and [Status]=''Open''		 
				if @CStatusID is null
					set @CStatusID=51
			end
			ELSE if(@CostCenterID in(83))		
			BEGIN
				select @StatusID=1002
				select @CStatusID=StatusID from COM_Status with(nolock) where CostCenterID=@CostCenterID and [Status]=''Active''
				--	select  StatusID,status from COM_Status WITH(NOLOCK) where costcenterid=83 and status=''Active''
				if @CStatusID is null
					set @CStatusID=393
			end
		else
			select @StatusID=StatusID from COM_Status with(nolock) where CostCenterID=@CostCenterID and [Status]=''Active''
			 
	end
	else
		set @StatusID=1003
		
	IF(@WID is not null and @WID>0 and @StatusID IN (1001,1002))
	BEGIN
		SET @tempCode=''''
		SELECT @tempCode=SpName from ADM_DocFunctions a WITH(NOLOCK) WHERE CostCenterID=@CostCenterID and Mode=12
		IF(@tempCode<>'''')
			EXEC @tempCode @CostCenterID,@NodeID,@UserID,@LangID
	END
		
		print ''@oldStatusID''
		print @oldStatusID

		print ''@Level''
		print @Level

		print ''@tempLevel''
		print @tempLevel

	if @oldStatusID!=@StatusID OR @Level!=@tempLevel
	begin 
	print ''ww''
		if(@WID>0) 
		BEGIN
		   INSERT INTO COM_Approvals    
			  (CCID    
			  ,CCNODEID    
			  ,StatusID    
			  ,[Date]
			  ,Remarks 
			  ,UserID   
			  ,CompanyGUID,[GUID]    
			  ,CreatedBy,CreatedDate,WorkFlowLevel,DocDetID)      
			VALUES    
			  (@COSTCENTERID    
			  ,@NODEID 
			  ,ISNULL(@CStatusID,@StatusID)     
			  ,CONVERT(FLOAT,GETDATE())
			  ,@REMARKS
			  ,@UserID
			  ,@CompanyGUID,newid()    
			  ,@UserName,CONVERT(FLOAT,GETDATE()),isnull(@level,0),0)
	      
			
		END	
		 

		if @StatusID=1001 OR @StatusID=1002 OR @StatusID=1003 --UnApp,Rejected
				EXEC spCOM_SetNotifEvent @StatusID,@CostCenterID,@NodeID,''CompanyGUID'',@UserName,@UserID,@RoleID
			else
				EXEC spCOM_SetNotifEvent -2000,@CostCenterID,@NodeID,''CompanyGUID'',@UserName,@UserID,@RoleID


		 if(@CostCenterID in(2,3,94,92,86,72,83,76,89) or  @CostCenterID>=50000)		 
		begin	 		
		     set @SQL=''''
		    select @SQL=''update ''+TableName+'' set StatusID=''+convert(nvarchar,CASE  WHEN @CostCenterID=@CostCenterID THEN ISNULL(@CStatusID,@StatusID)  ELSE @StatusID END)+'',WorkFlowLevel=''+convert(nvarchar,@level)+'' 
			where ''+PrimaryKey+''=''+convert(nvarchar,@NodeID)
			from ADM_Features with(nolock) where FeatureID=@CostCenterID
			 
			print (@SQL)	
		    exec(@SQL)
			
			if(@CostCenterID=50051)
			begin
				set @SQL=''''
				set @sql=''
				declare @ROLECODE INT,@USRID INT,@LoginUserID NVARCHAR(250),@userStatus int
				SELECT @LoginUserID=LoginUserID,@userStatus=StatusID FROM COM_CC50051 WITH(NOLOCK) WHERE NodeID=''+convert(nvarchar,@NodeID)+''
				SELECT @ROLECODE=ISNULL(ROLEID,0) FROM COM_CC50051 WITH(NOLOCK) WHERE NodeID=''+convert(nvarchar,@NodeID)+'' and ISNULL(CanCreateUser,'''''''')=''''Yes''''
				SELECT @USRID=ISNULL(USERID,0)  FROM ADM_USERS WITH(NOLOCK) WHERE USERNAME=@LoginUserID --@Code
				IF ISNULL(@ROLECODE,0)>0
				BEGIN
					IF ISNULL(@USRID,0)>0
					BEGIN
						UPDATE ADM_USERS SET StatusID=case when @userStatus=250 then 1 else 2 end WHERE USERNAME=@LoginUserID		--@CODE
						UPDATE [PACT2C].dbo.ADM_Users SET StatusID=case when @userStatus=250 then 1 else 2 end WHERE USERNAME=@LoginUserID --@CODE
					end
				end''

				print (@sql)
				exec(@SQL)
			end
		end
		
		 
		else if(@CostCenterID =93)--units
		BEGIN
			select @SQL=''update ''+TableName+'' set Status=''+convert(nvarchar,CASE  WHEN @CostCenterID=@CostCenterID THEN ISNULL(@CStatusID,@StatusID)  ELSE @StatusID END)+'',WorkFlowLevel=''+convert(nvarchar,@level)+'' 
			where ''+PrimaryKey+''=''+convert(nvarchar,@NodeID)
			from ADM_Features with(nolock) where FeatureID=@CostCenterID
			print @SQL
		    exec(@SQL)
		END	
		
 	 
		
		IF @oldStatusID!=@StatusID AND EXISTS (SELECT * FROM COM_DocBridge WITH(NOLOCK) WHERE CostCenterID=50001 AND NodeID=@NodeID)
		BEGIN
			SELECT @CostCenterID=RefDimensionID,@NodeID=RefDimensionNodeID FROM COM_DocBridge WITH(NOLOCK) 
			WHERE CostCenterID=@CostCenterID AND NodeID=@NodeID
			
			if @CostCenterID>=50001
			begin
				IF(@StatusID<>1001 AND @StatusID<>1002 AND @StatusID<>1003)
					select @StatusID=StatusID from COM_Status with(nolock) where CostCenterID=@CostCenterID and [Status]=''Active''
				select @SQL=''update ''+TableName+'' set StatusID=''+convert(nvarchar,@StatusID)+'' where ''+PrimaryKey+''=''+convert(nvarchar,@NodeID)
				from ADM_Features with(nolock) where FeatureID=@CostCenterID
				exec(@SQL)
			end
		END
	END
	
COMMIT TRANSACTION  
--ROLLBACK TRANSACTION 
SET NOCOUNT OFF;    
--else if ((@CostCenterID>=50001 and @CostCenterID<=50054) or  @CostCenterID=50170)
IF(@CStatusID IS NOT NULL  AND @CostCenterID IN(2,3,93,92,94,76,83,89) OR  (@CostCenterID>=50001))
BEGIN
	select @temp=isnull(ResourceData,'''') from COM_Status S WITH(NOLOCK)
	 join COM_LanguageResources R WITH(NOLOCK) on R.ResourceID=S.ResourceID and R.LanguageID=@LangID
	 where S.StatusID=@CStatusID
END 
ELSE
BEGIN
	 select @temp=isnull(ResourceData,'''') from COM_Status S WITH(NOLOCK)
	 join COM_LanguageResources R WITH(NOLOCK) on R.ResourceID=S.ResourceID and R.LanguageID=@LangID
	 where S.StatusID=@StatusID
END 
SELECT   @temp status,ErrorMessage + ''   '' + isnull(@Name,'''') +case when @temp<>'''' then '' [''+@temp+'']'' else '''' end  as ErrorMessage,ErrorNumber 
FROM COM_ErrorMessages WITH(nolock)   
WHERE ErrorNumber=105 AND LanguageID=@LangID    
RETURN  1    
END TRY    
BEGIN CATCH      
 --Return exception info [Message,Number,ProcedureName,LineNumber]      
 IF ERROR_NUMBER()=50000    
 BEGIN       
  SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=@LangID    
 END    
 ELSE    
 BEGIN    
  SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() as ErrorNumber, ERROR_PROCEDURE()as ProcedureName, ERROR_LINE() AS ErrorLine    
  FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=-999 AND LanguageID=@LangID    
 END    
ROLLBACK TRANSACTION    
SET NOCOUNT OFF      
RETURN -999       
END CATCH
' 
END
GO
/****** Object:  StoredProcedure [dbo].[spDOC_GetVPTDocumentsData]    Script Date: 29-09-2025 17:02:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[spDOC_GetVPTDocumentsData]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N' 
 CREATE procedure [dbo].[spDOC_GetVPTDocumentsData]
@DocumentID INT,  
@DocumentSeqNo INT,
@LinkDetails NVARCHAR(MAX)=NULL,
@ExtendedDataQuery nvarchar(MAX),
@DynamicSet int,
@KIT int,
@Attachments int,
@BWBillNo bit,
@Version int,
@RevisionColumns NVARCHAR(MAX),
@UserID INT,
@UserName NVARCHAR(50),
@LangID INT=1  
AS
 BEGIN TRY  
SET NOCOUNT ON;

	--Declaration Section
	DECLARE @HasAccess BIT, @SQL NVARCHAR(MAX),@TableName NVARCHAR(50),@History nvarchar(50),@HistoryWh nvarchar(50)
	DECLARE @code NVARCHAR(200),@no INT, @IsInventoryDoc BIT,@docType int
	DECLARE @VoucherNo NVARCHAR(100),@VoucherType INT, @SELECTSQL NVARCHAR(MAX), @FROMSQL NVARCHAR(MAX)
	DECLARE @Ind INT
	DECLARE @k int,@cnt int,@SQLTABLE NVARCHAR(MAX),@SQL1 NVARCHAR(MAX),@PreviousRevision int
	DECLARE @txtJoin nvarchar(max),@numJoin nvarchar(max),@srevisionColumns nvarchar(max),@selectrevisionColumns nvarchar(max)
	--------
	DECLARE @IsLineWisePDC bit
	Declare @docPref table(name nvarchar(100),value nvarchar(100))

	insert into @docPref
	SELECT PrefName,PrefValue  FROM [COM_DocumentPreferences]  WITH(NOLOCK) 
	WHERE CostCenterID=@DocumentID AND PrefName in(''LineWisePDC'',''UseasCrossDimension'')
	
	set @IsLineWisePDC=0
	select @IsLineWisePDC=isnull(Value,0) from @docPref
	where Name=''LineWisePDC'' 
	-----------

	SELECT @IsInventoryDoc=IsInventory,@docType=documentType FROM ADM_DocumentTypes WITH(NOLOCK) 
	WHERE CostCenterID=@DocumentID

	DECLARE @EXTSQL NVARCHAR(MAX)=''''
	SELECT @EXTSQL=@EXTSQL+'',T.''+D.SysColumnName FROM ADM_COSTCENTERDEF D WITH(NOLOCK) 
	JOIN SYS.COLUMNS C WITH(NOLOCK) ON C.object_id=OBJECT_ID(''COM_DocTextData'') AND C.Name=D.SysColumnName
	WHERE D.CostCenterID=@DocumentID AND D.IsColumnInUse=1 AND D.SysColumnName Like ''dcAlpha%'' 
	
	if(@DocumentID=40054)
	begin
	SELECT  @EXTSQL=@EXTSQL+'',N.''+Name FROM  SYS.COLUMNS C WITH(NOLOCK) where  C.object_id=OBJECT_ID(''PAY_DocNumData'')
		and  (Name Like ''dcNum%'' OR Name Like ''dcCalcNum%'' OR Name Like ''dcCurrID%'' OR Name Like ''dcExchRT%'')

		--SELECT @EXTSQL=@EXTSQL+'',N.''+D.SysColumnName FROM ADM_COSTCENTERDEF D WITH(NOLOCK) 
		--JOIN SYS.COLUMNS C WITH(NOLOCK) ON C.object_id=OBJECT_ID(''PAY_DocNumData'') AND C.Name=D.SysColumnName
		--WHERE D.CostCenterID=@DocumentID  AND (D.SysColumnName Like ''dcNum%'' OR D.SysColumnName Like ''dcCalcNum%'' OR D.SysColumnName Like ''dcCurrID%'' OR D.SysColumnName Like ''dcExchRT%'')
	end
	else
	begin
		SELECT @EXTSQL=@EXTSQL+'',N.''+D.SysColumnName FROM ADM_COSTCENTERDEF D WITH(NOLOCK) 
		JOIN SYS.COLUMNS C WITH(NOLOCK) ON C.object_id=OBJECT_ID(''COM_DocNumData'') AND C.Name=D.SysColumnName
		WHERE D.CostCenterID=@DocumentID AND D.IsColumnInUse=1 AND (D.SysColumnName Like ''dcNum%'' OR D.SysColumnName Like ''dcCalcNum%'' OR D.SysColumnName Like ''dcCurrID%'' OR D.SysColumnName Like ''dcExchRT%'') 
	end
	
	 

	SET @SELECTSQL=''''
	SET @FROMSQL=''''
	
	--Check For Company Fields Exists
	if(@ExtendedDataQuery like ''%#PACTCOMPANYID#%'')
	begin		
		SET @ExtendedDataQuery=replace(@ExtendedDataQuery,''#PACTCOMPANYID#'',replace(db_name(),''PACT2C'',''''))
	end

	IF @IsInventoryDoc=1 OR (@LinkDetails IS NOT NULL and @LinkDetails!=''AccBillwise'')
	BEGIN		
		SET @Ind=CHARINDEX(''FROM INV_DocDetails '',@ExtendedDataQuery)
		IF @Ind>0
		BEGIN
			--@FROMSQL
			SET @ExtendedDataQuery=replace(@ExtendedDataQuery,''#PACTLRID#'',CONVERT(NVARCHAR,@LangID))

			SET @FROMSQL=replace(substring(@ExtendedDataQuery,@Ind+len(''FROM INV_DocDetails ''),len(@ExtendedDataQuery)),''INV_DocDetails.'',''D.'')
			SET @SELECTSQL=substring(@ExtendedDataQuery,7,@Ind-7)+'',''
		END	

	--select * from INV_DocDetails
		SELECT @VoucherNo=VoucherNo,@VoucherType=VoucherType FROM INV_DocDetails WITH(NOLOCK) WHERE DocID=@DocumentSeqNo

		SET @SQL=''''
		IF @LinkDetails IS NOT NULL and @LinkDetails NOT LIKE ''BillWise~%''
		BEGIN
			SET @SQL=''DECLARE @Tbl AS TABLE(ID INT IDENTITY(1,1),LinkID INT)
			INSERT INTO @Tbl(LinkID)
			EXEC SPSplitString ''''''+@LinkDetails+'''''','''',''''
			''
		END
		
		--Start:Previous Revision
		set @History=''''
		set @HistoryWh=''''
		SET @SQL=''''
		SET @SQL1=''''
		SET @SQLTABLE=''''
		SET @PreviousRevision=0
		SET @srevisionColumns=''''
		SET @txtJoin=''''
		SET @numJoin=''''
		SET @selectrevisionColumns=''''
		IF(ISNULL(@RevisionColumns,'''')<>'''')
			SET @PreviousRevision=1
		IF(@PreviousRevision=1)
		BEGIN			
			IF (@Version>=-1)
			BEGIN				
				 --Start:Temp Table
				SET @SQLTABLE=''	 CREATE TABLE #TAB(INVDOCDETAILSID INT,''
				CREATE TABLE #TABSELECT (ID INT IDENTITY(1,1),COLNAME NVARCHAR(MAX))
				INSERT INTO #TABSELECT(COLNAME)
					exec SPSplitString @RevisionColumns,''~''
				
				SET @k=1
				select @cnt=count(*) from #TABSELECT
				while(@k<=@cnt)
				begin
					IF(@k=1)
						SELECT  @srevisionColumns=COLNAME FROM #TABSELECT WHERE ID=@k
					ELSE IF (@k=2)
						SELECT  @selectrevisionColumns=COLNAME FROM #TABSELECT WHERE ID=@k
					ELSE IF (@k=3)
						SELECT  @txtJoin=COLNAME FROM #TABSELECT WHERE ID=@k
					ELSE IF (@K=4)
						SELECT  @numJoin=COLNAME FROM #TABSELECT WHERE ID=@k
				set @k=@k+1
				end
				SET @SQLTABLE=@SQLTABLE+@srevisionColumns+'') ''
				----End:Temp Table
				
				IF @Version=-1
				BEGIN
					SET @History=''_History''
					SET @SQL=@SQL+''	declare @ModDate float
									select @ModDate=max(h.ModifiedDate) from inv_docdetails_History h with(nolock) ,inv_docdetails b with(nolock) where h.invdocdetailsid=b.invdocdetailsid and h.DocID=''+CONVERT(NVARCHAR,@DocumentSeqNo)+'' and h.versionno<>b.versionno  ''
					set @FROMSQL=replace(@FROMSQL,''COM_DocCCData'',''COM_DocCCData_History'')
					set @FROMSQL=replace(@FROMSQL,''ON D.InvDocDetailsID=COM_DocCCData_History.InvDocDetailsID'',''ON D.InvDocDetailsID=COM_DocCCData_History.InvDocDetailsID and COM_DocCCData_History.ModifiedDate=@ModDate'')
				END			
				set @SQL=@SQL+@SQLTABLE
				SET @SQL=@SQL+'' insert into #TAB
					SELECT  distinct D.INVDOCDETAILSID,''+  @selectrevisionColumns +''
					FROM INV_DocDetails''+@History+'' D WITH(NOLOCK) LEFT JOIN
					INV_DocDetails''+@History+'' LD WITH(NOLOCK) ON LD.InvDocDetailsID=D.LinkedInvDocDetailsID LEFT JOIN
					ACC_Accounts LDR WITH(NOLOCK) ON LDR.AccountID=LD.DebitAccount LEFT JOIN
					ACC_Accounts LCR WITH(NOLOCK) ON LCR.AccountID=LD.CreditAccount ''
					IF(ISNULL(@txtJoin,'''')<>'''')
					BEGIN
						SET @SQL=@SQL+ @txtJoin +'' ''
						IF @Version=-1
							SET @SQL=@SQL+'' and T.ModifiedDate=@ModDate ''
					END
					
						print @numJoin
				IF(ISNULL(@numJoin,'''')<>'''')
				BEGIN
					SET @SQL=@SQL+ @numJoin
					IF @Version=-1
						SET @SQL=@SQL+'' and N.ModifiedDate=@ModDate ''
				END		
				SET @SQL=@SQL+'' LEFT JOIN 
					COM_Currency C WITH(NOLOCK) ON C.CurrencyID=D.CurrencyID LEFT JOIN
					COM_Status S WITH(NOLOCK) ON S.StatusID=D.StatusID LEFT JOIN 
					COM_UOM UOM WITH(NOLOCK) on D.Unit=UOM.UOMID''+@FROMSQL
				
				if @DynamicSet=1
				begin
					if(@FROMSQL not like ''%INV_Product AS P with(nolock) ON P.ProductID=D.ProductID%'')
						SET @SQL=@SQL+'' LEFT JOIN INV_Product AS P with(nolock) ON P.ProductID=D.ProductID''
				end
				
				SET @SQL=@SQL+'' join INV_DocDetails b with(nolock) on D.InvDocDetailsID=b.InvDocDetailsID ''
					
				IF @LinkDetails IS NULL
					SET @SQL=@SQL+'' WHERE D.DocID=''+CONVERT(NVARCHAR,@DocumentSeqNo)
				ELSE
					SET @SQL=@SQL+'' INNER JOIN @Tbl TLink ON TLink.LinkID=D.InvDocDetailsID WHERE 1=1''
				
				IF @docType=5
					SET @SQL=@SQL+'' AND D.VoucherType=-1''
					
				IF @DynamicSet=0
					SET @SQL=@SQL+'' AND D.DynamicInvDocDetailsID IS NULL''
				ELSE IF @DynamicSet=1
					SET @SQL=@SQL+'' AND (D.DynamicInvDocDetailsID IS NOT NULL OR (D.ProductID>0 and P.ProductTypeID!=3))''
					
				if @Version=-1
					SET @SQL=@SQL+'' and  D.versionno<>b.versionno  ''
					
				IF @Version=-1
					SET @SQL=@SQL+'' order by D.INVDOCDETAILSID,''+  @selectrevisionColumns +'' desc''
				ELSE 
					SET @SQL=@SQL+'' ORDER BY D.InvDocDetailsID''
				--EXEC(@SQL)
			END
			SET @SQL1=@SQL
		END
		--End:Previous Revision
		
		SET @SQL=''''
		set @History=''''
		set @HistoryWh=''''
		SET @SQL=@SQL+@SQL1
		if @Version>-1
		begin
			set @History=''_History''
			set @HistoryWh='' and D.ModifiedDate=@ModDate''
			set @SQL=@SQL+''
			declare @ModDate float
			select @ModDate=max(ModifiedDate) from inv_docdetails_History with(nolock) where DocID=''+CONVERT(NVARCHAR,@DocumentSeqNo)+'' and VersionNo=''+CONVERT(NVARCHAR,@Version)
			set @FROMSQL=replace(@FROMSQL,''COM_DocCCData'',''COM_DocCCData_History'')
			set @FROMSQL=replace(@FROMSQL,''ON D.InvDocDetailsID=COM_DocCCData_History.InvDocDetailsID'',''ON D.InvDocDetailsID=COM_DocCCData_History.InvDocDetailsID and COM_DocCCData_History.ModifiedDate=@ModDate'')
		end
		
		SET @SQL=@SQL+''
					SELECT CASE WHEN D.DynamicInvDocDetailsID IS NULL THEN D.DocSeqNo ELSE (SELECT TOP 1 DocSeqNo FROM INV_DocDetails with(nolock) WHERE InvDocDetailsID=D.DynamicInvDocDetailsID) END SeqNo,
					''+@SELECTSQL+''
					D.ProductID,D.DynamicInvDocDetailsID,D.BillNo,D.VoucherNo,D.VoucherType,D.DocumentType,D.DebitAccount,D.CreditAccount,
					CONVERT(DATETIME,D.DocDate) DocDate,D.DocAbbr,D.DocPrefix [Doc Prefix],D.DocNumber [Doc Serial No],D.DocSeqNo DocLineNo,
					CONVERT(DATETIME,D.DueDate) DueDate,CONVERT(DATETIME,D.BillDate) BillDate,D.WorkFlowID,D.WorkFlowLevel,
					CASE WHEN ''+CONVERT(NVARCHAR,@docType)+''=38 AND D.VoucherType=1 AND D.Quantity>0 THEN -1*D.Quantity ELSE D.Quantity END as Quantity,
					D.Rate,D.HoldQuantity,D.AverageRate,
					CASE WHEN ''+CONVERT(NVARCHAR,@docType)+''=38 AND D.VoucherType=1 AND D.Gross>0 THEN -1*D.Gross ELSE D.Gross END as Gross,
					CASE WHEN ''+CONVERT(NVARCHAR,@docType)+''=38 AND D.VoucherType=1 AND D.GrossFC>0 THEN -1*D.GrossFC ELSE D.GrossFC END as GrossFC,
					D.CommonNarration,D.LineNarration,
					D.CreatedBy,CONVERT(DATETIME,D.CreatedDate) CreatedDate,
					D.ModifiedBy,CONVERT(DATETIME,D.ModifiedDate) ModifiedDate,
					(select voucherno from inv_docdetails WITH(NOLOCK) where InvDocDetailsID=D.LinkedInvDocDetailsID) [RefNo],
					D.CurrencyID CURRENCY_ID,C.Name CurrencyID,C.Symbol CurrencySymbol,S.Status,D.ExchangeRate [ExchangeRate],
					D.LinkedInvDocDetailsID,LD.VoucherNo LinkDocNo,CONVERT(DATETIME,LD.DocDate) LinkDocDate,LD.DocAbbr LinkDocAbbr,LD.DocPrefix LinkDocPrefix,LD.DocNumber LinkDocSerialNo,LD.CommonNarration LinkCommonNarration,LD.LineNarration LinkLineNarration,
					LD.DocPrefix+LD.DocNumber as LinkSerialNoWithPrefix,
					LDR.AccountCode LinkDrAccountCode,LDR.AccountName LinkDrAccountName,LDR.AliasName LinkDrAccountAlias,
					LCR.AccountCode LinkCrAccountCode,LCR.AccountName LinkCrAccountName,LCR.AliasName LinkCrAccountAlias,
					CASE WHEN D.IsQtyFreeOffer=1 or (D.ParentSchemeID!='''''''' and D.ParentSchemeID is not null) THEN D.Quantity ELSE 0.0 END FreeQty,
					D.IsQtyFreeOffer,D.ParentSchemeID,D.VersionNo,DCD.dcCCNID2 as LocationID''+@EXTSQL+''
					,D.InvDocDetailsID,D.AccDocDetailsID,UOM.UnitName Unit,D.UOMConversion,
					N.Remarks,
					CASE WHEN ''+CONVERT(NVARCHAR,@docType)+''=38 AND D.VoucherType=1 AND D.UOMConvertedQty>0 THEN -1*D.UOMConvertedQty ELSE D.UOMConvertedQty END as UOMConvertedQty
					''

		IF(@PreviousRevision=1)
			SET @SQL=@SQL+'',TT.* ''


		IF(@docType=220)
		BEGIN
			declare @BidOpenVendorsEmail1 NVARCHAR(MAX),@BidOpenVendorsPhone1 NVARCHAR(MAX),@S1 NVARCHAR(MAX)
			SELECT @S1 ='' SELECT @BidOpenVendorsEmail1=STUFF( (Select '''',''''+ a.EMail1 
							From COM_Address a WITH(NOLOCK) 
							JOIN COM_BiddingDocs b WITH(NOLOCK) on a.FeatureID=2  AND b.VendorID=a.FeaturePK
							WHERE a.EMail1 IS NOT NULL AND a.EMail1<>'''''''' AND a.AddressTypeID=1 AND b.BODocID=''++CONVERT(NVARCHAR,@DocumentSeqNo)+''  FOR XML PATH('''''''') ),1,1,'''''''')
							
							,@BidOpenVendorsPhone1=STUFF( (Select '''',''''+ a.Phone1 
							From COM_Address a WITH(NOLOCK) 
							JOIN COM_BiddingDocs b WITH(NOLOCK) on a.FeatureID=2  AND b.VendorID=a.FeaturePK
							WHERE a.Phone1 IS NOT NULL AND a.Phone1<>'''''''' AND a.AddressTypeID=1 AND b.BODocID=''++CONVERT(NVARCHAR,@DocumentSeqNo)+''  FOR XML PATH('''''''') ),1,1,'''''''')
							 ''
			
			EXEC sp_executesql @S1,N''@BidOpenVendorsEmail1 nvarchar(MAX) output,@BidOpenVendorsPhone1 nvarchar(MAX) output'',@BidOpenVendorsEmail1 output,@BidOpenVendorsPhone1 output
			SET @SQL=@SQL+'',''''''+ISNULL(@BidOpenVendorsEmail1,'''')+'''''' as BidOpenVendorsEmail1,''''''+ISNULL(@BidOpenVendorsPhone1,'''')+'''''' as BidOpenVendorsPhone1 ''
		END
		

		SET @SQL=@SQL+'' FROM INV_DocDetails''+@History+'' D WITH(NOLOCK) 
		LEFT JOIN INV_DocDetails''+@History+'' LD WITH(NOLOCK) ON LD.InvDocDetailsID=D.LinkedInvDocDetailsID 
		LEFT JOIN COM_DocCCDATA DCD WITH(NOLOCK) ON DCD.InvDocDetailsID=D.InvDocDetailsID ''  

		IF(@PreviousRevision=1)
			SET @SQL=@SQL+'' LEFT JOIN #TAB TT ON TT.InvDocDetailsID=D.InvDocDetailsID ''
			
		SET @SQL=@SQL+'' LEFT JOIN
		ACC_Accounts LDR WITH(NOLOCK) ON LDR.AccountID=LD.DebitAccount LEFT JOIN
		ACC_Accounts LCR WITH(NOLOCK) ON LCR.AccountID=LD.CreditAccount LEFT JOIN				
		COM_DocTextData''+@History+'' T WITH(NOLOCK) ON T.InvDocDetailsID=D.InvDocDetailsID''+replace(@HistoryWh,''D.'',''T.'')+'' LEFT JOIN
		''
		if @DocumentID=40054
			set @SQL=@SQL+''PAY_DocNumData''+@History
		else
			set @SQL=@SQL+''COM_DocNumData''+@History
		set @SQL=@SQL+'' N WITH(NOLOCK) ON N.InvDocDetailsID=D.InvDocDetailsID''+replace(@HistoryWh,''D.'',''N.'')+'' LEFT JOIN
		COM_Currency C WITH(NOLOCK) ON C.CurrencyID=D.CurrencyID LEFT JOIN
		COM_Status S WITH(NOLOCK) ON S.StatusID=D.StatusID LEFT JOIN 
		COM_UOM UOM WITH(NOLOCK) on D.Unit=UOM.UOMID''+@FROMSQL
		
		if @DynamicSet=1
		begin
			if(@FROMSQL not like ''%INV_Product AS P with(nolock) ON P.ProductID=D.ProductID%'')
				SET @SQL=@SQL+'' LEFT JOIN INV_Product AS P with(nolock) ON P.ProductID=D.ProductID''
		end
			
		IF @LinkDetails IS NULL
			SET @SQL=@SQL+'' WHERE D.DocID=''+CONVERT(NVARCHAR,@DocumentSeqNo)
		ELSE
			SET @SQL=@SQL+'' INNER JOIN @Tbl TLink ON TLink.LinkID=D.InvDocDetailsID WHERE 1=1''
		
		IF @docType=5
			SET @SQL=@SQL+'' AND D.VoucherType=-1''
			
		IF @DynamicSet=0
			SET @SQL=@SQL+'' AND D.DynamicInvDocDetailsID IS NULL''
		ELSE IF @DynamicSet=1
			SET @SQL=@SQL+'' AND (D.DynamicInvDocDetailsID IS NOT NULL OR (D.ProductID>0 and P.ProductTypeID!=3))''
			
		if @Version>-1
			SET @SQL=@SQL+'' AND D.VersionNo=''+convert(nvarchar,@Version)+@HistoryWh
			
		IF @LinkDetails IS NULL
			SET @SQL=@SQL+'' ORDER BY SeqNo,D.InvDocDetailsID''
		ELSE
			SET @SQL=@SQL+'' ORDER BY TLink.ID''
		
		IF(@PreviousRevision=1)
			SET @SQL=@SQL+'' Drop Table #TAB''	
			
		--select @SQL
	 	--PRINT(@SQL)
	 	print(substring(@SQL,1,4000))
		print(substring(@SQL,4001,4000))
		print(substring(@SQL,8001,4000))
		print(substring(@SQL,12001,4000))
		print(substring(@SQL,16001,4000))
		----0
		EXEC(@SQL)
		
		----1->BillWise Data
		SELECT B.BillWiseID,B.RefDocNo BillWiseRefDocNo,CONVERT(DATETIME,B.RefDocDate) BillWiseRefDocDate, B.DocSeqNo SeqNo, B.AccountID,B.Narration as BillWiseRemarks,
		abs(B.AdjAmount) BillWiseAmount,abs(B.AmountFC) BillWiseAmountFC, D.BillNo as BillWiseRefBillNo,
		(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmount,
		(select abs(SUM(BB.AdjAmount/BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmountFC,
		
		(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
		(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0) BillWiseRefDocUnAdjustedAmount,
		
		((select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
		(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0))
		*(select abs(SUM(BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1) BillWiseRefDocUnAdjustedAmountFC,

		( Select ISNULL((ABS(SUM(ISNULL(BB.AdjAmount,0)))),0) from COM_Billwise BB with(nolock)
		left join Inv_DocDetails DD with(nolock) ON BB.DocNo=DD.VoucherNo 
		where B.BillwiseID<>BB.BillwiseID AND B.RefDocNo=BB.RefDocNo and B.AccountID=BB.AccountID 
		and (BB.DocDate+(DD.CreatedDate-FLOOR(DD.CreatedDate))) <=(B.DocDate+(D1.CreatedDate-FLOOR(D1.CreatedDate))) ) BillWisePrevPaidAmount,
		
		case when D.billdate is null then '' '' else Convert(datetime,D.BillDate)  end as BillWiseRefBillDate,null BillWiseRefDueDate
		,isnull((select top 1 commonNarration from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 commonNarration from INV_DocDetails with(nolock) where VoucherNo=B.RefDocNo)) BillWiseRefDocNarration
		,(select top 1 DocNumber from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo) BillWiseRefDocSerialNo
		,1 IsSaveAdjustment
		,(Select TOP 1 Narration from COM_Billwise BB with(nolock) where BB.DocNo=B.RefDocNo AND BB.DocSeqNo=B.RefDocSeqNo AND BB.AccountID=B.AccountID) BillWiseRefDocRemarks
		FROM  COM_Billwise B with(nolock)
		left join Inv_DocDetails D with(nolock) ON B.RefDocNo=D.VoucherNo
		left join Inv_DocDetails D1 with(nolock) ON B.DocNo=D1.VoucherNo
		WHERE B.DocNo=@VoucherNo AND B.IsNewReference=0
		UNION
		SELECT B.BillWiseID,B.DocNo BillWiseRefDocNo,CONVERT(DATETIME,B.DocDate) BillWiseRefDocDate, B.RefDocSeqNo SeqNo,B.AccountID,B.Narration as BillWiseRemarks, 
		abs(B.AdjAmount) BillWiseAmount,abs(B.AmountFC) BillWiseAmountFC, D.BillNo as BillWiseRefBillNo,
		(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmount,
		(select abs(SUM(BB.AdjAmount/BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmountFC,
		(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID)
		-(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.DocNo=B.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0) BillWiseRefDocUnAdjustedAmount,		
		((select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID)
		-(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.DocNo=B.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0))
		 *(select abs(SUM(BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocUnAdjustedAmountFC,		

		( Select ISNULL((ABS(SUM(ISNULL(BB.AdjAmount,0)))),0) from COM_Billwise BB with(nolock)
		left join Inv_DocDetails DD with(nolock) ON BB.DocNo=DD.VoucherNo 
		where B.BillwiseID<>BB.BillwiseID AND B.RefDocNo=BB.RefDocNo and B.AccountID=BB.AccountID 
		and (BB.DocDate+(DD.CreatedDate-FLOOR(DD.CreatedDate))) <=(B.DocDate+(D.CreatedDate-FLOOR(D.CreatedDate))) ) BillWisePrevPaidAmount,
		
		case when D.billdate is null then '' '' else Convert(datetime,D.BillDate)  end as BillWiseRefBillDate,null BillWiseRefDocDueDate
		,isnull((select top 1 commonNarration from ACC_DocDetails with(nolock) where VoucherNo=B.DocNo),(select top 1 commonNarration from INV_DocDetails with(nolock) where VoucherNo=B.DocNo)) BillWiseRefDocNarration
		,(select top 1 DocNumber from ACC_DocDetails with(nolock) where VoucherNo=B.DocNo) BillWiseRefDocSerialNo
		,0 IsSaveAdjustment
		,(Select TOP 1 Narration from COM_Billwise BB with(nolock) where BB.DocNo=B.RefDocNo AND BB.DocSeqNo=B.RefDocSeqNo AND BB.AccountID=B.AccountID) BillWiseRefDocRemarks
		FROM   COM_Billwise B with(nolock)
		left join Inv_DocDetails D with(nolock) ON B.DocNo=D.VoucherNo
		WHERE B.RefDocNo=@VoucherNo AND B.IsNewReference=0
		ORDER BY BillWiseID
		
		----2->BATCH DETAILS
		SELECT D.InvDocDetailsID, B.BatchNumber Batch_No, B.BatchCode Batch_Code
		,CONVERT(DATETIME,B.MfgDate) Batch_MfgDate,CONVERT(DATETIME,B.ExpiryDate) Batch_ExpDate,CONVERT(DATETIME,B.ReTestDate) Batch_ReTestDate
		FROM  INV_Batches AS B with(nolock) 
		INNER JOIN Inv_DocDetails D with(nolock) ON B.BatchID=D.BatchID
		WHERE D.VoucherNo=@VoucherNo and D.BatchID!=1
				
		----3-> PAYMENT TERMS
		DECLARE @DimCCID INT,@DimNodeID INT,@Dtbl NVARCHAR(50)
		SELECT @DimCCID=DimCCID,@DimNodeID=DimNodeID FROM COM_DocPayTerms P with(nolock) 
		WHERE VoucherNo=@VoucherNo
		IF(ISNULL(@DimCCID,0)>0)
		BEGIN
			SELECT @Dtbl=TableName From ADM_Features WITH(NOLOCK) WHERE FeatureID=@DimCCID
		END
		
		SET @SQL=''SELECT P.Amount PayTerms_Amount,P.days PayTerms_Days,CONVERT(datetime,P.DueDate) PayTerms_DueDate,P.Percentage PayTerms_Percentage
		,P.Remarts PayTerms_Remarks,PD.ProfileName PayTerms_ProfileName,P.Remarks1 PayTerms_Remarks1''

		IF(@Dtbl IS NOT NULL AND @Dtbl<>'''')
			SET @SQL+='',Pdim1.Code as PayTerms_DimensionCode,Pdim1.Name as PayTerms_DimensionName,Pdim1.AliasName as PayTerms_DimensionAlias''

		SET @SQL+='' FROM COM_DocPayTerms P with(nolock) 
		left join Acc_PaymentDiscountProfile PD with(nolock) on P.ProfileID=PD.ProfileID ''
		
		IF(@Dtbl IS NOT NULL AND @Dtbl<>'''')
			SET @SQL+='' LEFT JOIN ''+@Dtbl+'' Pdim1 WITH(NOLOCK) on Pdim1.NodeID=ISNULL(P.DimNodeID,0) ''

		SET @SQL+='' WHERE VoucherNo=''''''+@VoucherNo + ''''''
		ORDER BY DocPaytermID ''
		print @SQL
		EXEC(@SQL)
		
		---4-> SERIAL NOS
		SELECT D.InvDocDetailsID,S.SerialNumber Product_SerialNumbers
		FROM INV_SerialStockProduct AS S with(nolock) 
		INNER JOIN Inv_DocDetails D with(nolock) ON D.InvDocDetailsID=S.InvDocDetailsID
		WHERE D.VoucherNo=@VoucherNo   
		
	END
	ELSE
	BEGIN
		SET @Ind=CHARINDEX(''FROM ACC_DocDetails '',@ExtendedDataQuery)
		IF @Ind>0
		BEGIN
			--@FROMSQL
			SET @ExtendedDataQuery=replace(@ExtendedDataQuery,''#PACTLRID#'',CONVERT(NVARCHAR,@LangID))

			SET @FROMSQL=replace(substring(@ExtendedDataQuery,@Ind+len(''FROM ACC_DocDetails ''),len(@ExtendedDataQuery)),''ACC_DocDetails.'',''D.'')
			SET @SELECTSQL=substring(@ExtendedDataQuery,7,@Ind-7)+'',''
		END
		
			
		IF @LinkDetails is not null and @LinkDetails=''AccBillwise''
		BEGIN
			
			SELECT @DocumentSeqNo=DocID,@VoucherNo=VoucherNo FROM ACC_DocDetails WITH(NOLOCK) WHERE RefCCID=300 and RefNodeID=@DocumentSeqNo
			if @VoucherNo is null
			begin
				SELECT @VoucherNo=VoucherNo FROM INV_DocDetails WITH(NOLOCK) WHERE DocID=@DocumentSeqNo
				set @DocumentSeqNo=null
				select @DocumentSeqNo=DocID from ACC_DocDetails WITH(NOLOCK) where VoucherNo IN (
					SELECT DocNo FROM COM_BillWise WITH(NOLOCK) WHERE RefDocNo=@VoucherNo 
					union all
					SELECT RefDocNo FROM COM_BillWise WITH(NOLOCK) WHERE DocNo=@VoucherNo)
			end
		END
		
		SELECT @VoucherNo=VoucherNo,@VoucherType=DocumentType FROM ACC_DocDetails WITH(NOLOCK) WHERE DocID=@DocumentSeqNo
		
		DECLARE @IsReceipt INT
		
		IF @VoucherType IN (18,19,21,22)
			SET @IsReceipt=1
		ELSE
			SET @IsReceipt=0
		---- 0 
		SET @SQL=''
DECLARE @IsReceipt BIT 
SET @IsReceipt=''+CONVERT(NVARCHAR,@IsReceipt)+''
SELECT D.BillNo, D.VoucherNo,D.DebitAccount,D.CreditAccount,D.DocumentType,D.DocSeqNo SNO,
''+@SELECTSQL+''
D.AccDocDetailsID,CONVERT(DATETIME,D.DocDate) DocDate,CONVERT(DATETIME,D.DueDate) DueDate,D.DocAbbr,D.DocPrefix [Doc Prefix],D.DocNumber [Doc Serial No],D.DocSeqNo DocLineNo,
D.ChequeBankName,D.ChequeNumber,CONVERT(DATETIME,D.ChequeDate) ChequeDate,D.WorkFlowID,D.WorkFlowLevel,
CONVERT(DATETIME,D.ChequeMaturityDate) ChequeMaturityDate,D.LineNarration,D.CommonNarration,
D.CreatedBy,CONVERT(DATETIME,D.CreatedDate) CreatedDate,D.ExchangeRate [ExchangeRate],
case when D.LinkedAccDocDetailsID>0 then ''''0'''' else ''''1'''' end IsMainRow,
D.CurrencyID CURRENCY_ID,C.Name CurrencyID,C.Symbol CurrencySymbol,
CASE WHEN D.BillDate=1 THEN ''''Replaced'''' WHEN D.BillDate=2 THEN ''''Replaced/Partial'''' ELSE S.Status END Status,  
D.LinkedAccDocDetailsID		
,D.VersionNo,DCD.dcCCNID2 as LocationID,T.*,N.*''
		IF @VoucherType IN (16,17,28,29)--JV,Opening Balance,DebitNote(JV),CreditNote(JV)
				SET @SQL=@SQL+'',D.Amount,D.AmountFC
				,CASE WHEN D.DebitAccount>0 THEN Amount ELSE 0 END DebitAmount
				,CASE WHEN D.CreditAccount>0 THEN Amount ELSE 0 END CreditAmount
				,CASE WHEN D.DebitAccount>0 THEN D.DebitAccount ELSE D.CreditAccount END AccountID
				,(SELECT TOP 1 AccountName From ACC_Accounts with(nolock) WHERE AccountID=(CASE WHEN D.DebitAccount>0 THEN D.DebitAccount ELSE D.CreditAccount END )) AccountName
				,(SELECT TOP 1 AccountCode From ACC_Accounts with(nolock) WHERE AccountID=(CASE WHEN D.DebitAccount>0 THEN D.DebitAccount ELSE D.CreditAccount END )) AccountCode
			''
		ELSE
			SET @SQL=@SQL+'' ,CASE WHEN IsNegative=1 THEN -D.Amount ELSE D.Amount END Amount,CASE WHEN IsNegative=1 THEN -D.AmountFC ELSE D.AmountFC END AmountFC
			,CASE WHEN (((LinkedAccDocDetailsID IS NULL OR LinkedAccDocDetailsID=0) AND IsNegative=0) OR (LinkedAccDocDetailsID>0 AND IsNegative=1)) THEN  
					(CASE WHEN @IsReceipt=1 THEN D.CreditAccount ELSE D.DebitAccount END) ELSE (CASE WHEN @IsReceipt=1 THEN D.DebitAccount ELSE D.CreditAccount END) END
		AccountID,
		(SELECT TOP 1 AccountCode From ACC_Accounts with(nolock) WHERE AccountID=(CASE WHEN (((LinkedAccDocDetailsID IS NULL OR LinkedAccDocDetailsID=0) AND IsNegative=0) OR (LinkedAccDocDetailsID>0 AND IsNegative=1)) THEN  
					(CASE WHEN @IsReceipt=1 THEN D.CreditAccount ELSE D.DebitAccount END) ELSE (CASE WHEN @IsReceipt=1 THEN D.DebitAccount ELSE D.CreditAccount END) END)) AccountCode
		,(SELECT TOP 1 AccountName From ACC_Accounts with(nolock) WHERE AccountID=(CASE WHEN (((LinkedAccDocDetailsID IS NULL OR LinkedAccDocDetailsID=0)  AND IsNegative=0) OR (LinkedAccDocDetailsID>0 AND IsNegative=1)) THEN  
					(CASE WHEN @IsReceipt=1 THEN D.CreditAccount ELSE D.DebitAccount END) ELSE (CASE WHEN @IsReceipt=1 THEN D.DebitAccount ELSE D.CreditAccount END) END)) AccountName 
			''

		SET @SQL=@SQL+'' FROM ACC_DocDetails D WITH(NOLOCK) LEFT JOIN 
		COM_DocTextData T WITH(NOLOCK) ON T.AccDocDetailsID=D.AccDocDetailsID LEFT JOIN 
		COM_DocNumData N WITH(NOLOCK) ON N.AccDocDetailsID=D.AccDocDetailsID LEFT JOIN
		COM_DocCCData DCD WITH(NOLOCK) ON DCD.AccDocDetailsID=D.AccDocDetailsID LEFT JOIN
		COM_Currency C WITH(NOLOCK) ON C.CurrencyID=D.CurrencyID LEFT JOIN
		COM_Status S WITH(NOLOCK) ON S.StatusID=D.StatusID''+@FROMSQL
		
		--,LD.VoucherNo LinkDocNo,CONVERT(DATETIME,LD.DocDate) LinkDocDate,LD.DocAbbr LinkDocAbbr,LD.DocPrefix LinkDocPrefix,LD.DocNumber LinkDocSerialNo,LD.CommonNarration LinkCommonNarration,LD.LineNarration LinkLineNarration,
		--LD.DocPrefix+LD.DocNumber as LinkSerialNoWithPrefix,
		--LDR.AccountCode LinkDrAccountCode,LDR.AccountName LinkDrAccountName,LDR.AliasName LinkDrAccountAlias,
		--LCR.AccountCode LinkCrAccountCode,LCR.AccountName LinkCrAccountName,LCR.AliasName LinkCrAccountAlias
		
		/*INV_DocDetails LD WITH(NOLOCK) ON LD.InvDocDetailsID=D.LinkedAccDocDetailsID LEFT JOIN
		ACC_Accounts LDR WITH(NOLOCK) ON LDR.AccountID=LD.DebitAccount LEFT JOIN
		ACC_Accounts LCR WITH(NOLOCK) ON LCR.AccountID=LD.CreditAccount LEFT JOIN	*/
		
		SET @SQL=@SQL+'' WHERE (D.DocID=''+CONVERT(NVARCHAR,@DocumentSeqNo)+'' OR D.VoucherNo=''''''+@VoucherNo+'''''')''
		
		IF @DynamicSet=0--To Get Account Linked Rows
		BEGIN
			SET @SQL=@SQL+'' AND (D.LinkedAccDocDetailsID IS NULL OR D.LinkedAccDocDetailsID=0)''
			SET @ExtendedDataQuery=@ExtendedDataQuery+'' AND (ACC_DocDetails.LinkedAccDocDetailsID IS NULL OR ACC_DocDetails.LinkedAccDocDetailsID=0)''
		END
		
		
		SET @SQL=@SQL+'' ORDER BY D.DocSeqNo ASC''
		--print(@SQL)
		--print(SUBSTRING(@SQL,4001,4000))
		
		EXEC(@SQL)

		--Billwise
		IF @BWBillNo=1--Returns cross join data if line wise bill no exists
		BEGIN
			if(@IsLineWisePDC=1 or exists(	select Value from @docPref
			where Name=''UseasCrossDimension'' and Value=''true''))
			BEGIN
				--1
				SELECT DISTINCT B.BillWiseID, B.RefDocNo BillWiseRefDocNo,CONVERT(DATETIME,B.RefDocDate) BillWiseRefDocDate, B.DocSeqNo SeqNo,B.AccountID,B.Narration as BillWiseRemarks,
				abs(AdjAmount) BillWiseAmount,abs(B.AmountFC) BillWiseAmountFC,
				isnull(D.BillNo,DA.BillNo) as BillWiseRefBillNo,
				Convert(datetime,isnull(D.BillDate,DA.BillDate)) as BillWiseRefBillDate,
				Convert(datetime,isnull(D.DueDate,DA.DueDate)) as BillWiseRefDocDueDate,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmount,
				(select abs(SUM(BB.AdjAmount/BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmountFC,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0) BillWiseRefDocUnAdjustedAmount,
				((select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0))
				/(select abs(SUM(BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1) BillWiseRefDocUnAdjustedAmountFC
				,0 as BillWisePrevPaidAmount
				,isnull((select top 1 commonNarration from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 commonNarration from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo)) BillWiseRefDocNarration
				,(select top 1 DocNumber from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo) BillWiseRefDocSerialNo
				,1 IsSaveAdjustment
				,(Select TOP 1 Narration from COM_Billwise BB with(nolock) where BB.DocNo=B.RefDocNo AND BB.DocSeqNo=B.RefDocSeqNo AND BB.AccountID=B.AccountID) BillWiseRefDocRemarks
				FROM COM_Billwise B with(nolock)
				left join Inv_DocDetails D with(nolock) ON B.RefDocNo=D.VoucherNo
				left join ACC_DocDetails DA with(nolock) ON B.RefDocNo=DA.VoucherNo and B.RefDocSeqNo=DA.DocSeqNo and DA.InvDocDetailsID is null

				join [ACC_DocDetails] B1 WITH(NOLOCK) on  B.[DocNo] =B1.VoucherNo
				join [ACC_DocDetails] C1 WITH(NOLOCK) on  B1.RefNodeid =C1.AccDocDetailsID
				WHERE C1.VoucherNo=@VoucherNo  AND IsNewReference=0
				ORDER BY B.BillWiseID
			END
			ELSE
			BEGIN
				--1
				SELECT B.BillWiseID, B.RefDocNo BillWiseRefDocNo,CONVERT(DATETIME,B.RefDocDate) BillWiseRefDocDate, B.DocSeqNo SeqNo,B.AccountID,B.Narration as BillWiseRemarks,
				abs(AdjAmount) BillWiseAmount,abs(B.AmountFC) BillWiseAmountFC,
				isnull(D.BillNo,DA.BillNo) as BillWiseRefBillNo,
				Convert(datetime,isnull(D.BillDate,DA.BillDate)) as BillWiseRefBillDate,
				Convert(datetime,isnull(D.DueDate,DA.DueDate)) as BillWiseRefDocDueDate,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmount,
				(select abs(SUM(BB.AdjAmount/BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmountFC,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0) BillWiseRefDocUnAdjustedAmount,
				((select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0))
				/(select abs(SUM(BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1) BillWiseRefDocUnAdjustedAmountFC
				
				,( Select ISNULL((ABS(SUM(ISNULL(BB.AdjAmount,0)))),0) from COM_Billwise BB with(nolock)
				left join ACC_DocDetails DD with(nolock) ON BB.DocNo=DD.VoucherNo and BB.RefDocSeqNo=DD.DocSeqNo 
				where B.BillwiseID<>BB.BillwiseID AND B.RefDocNo=BB.RefDocNo and B.AccountID=BB.AccountID 
				and (BB.DocDate+(DD.CreatedDate-FLOOR(DD.CreatedDate))) <=(B.DocDate+(D1.CreatedDate-FLOOR(D1.CreatedDate))) ) BillWisePrevPaidAmount
				
				,isnull((select top 1 commonNarration from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 commonNarration from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo)) BillWiseRefDocNarration
				,(select top 1 DocNumber from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo) BillWiseRefDocSerialNo
				,1 IsSaveAdjustment
				,(Select TOP 1 Narration from COM_Billwise BB with(nolock) where BB.DocNo=B.RefDocNo AND BB.DocSeqNo=B.RefDocSeqNo AND BB.AccountID=B.AccountID) BillWiseRefDocRemarks
				FROM COM_Billwise B with(nolock)
				left join Inv_DocDetails D with(nolock) ON B.RefDocNo=D.VoucherNo
				left join ACC_DocDetails DA with(nolock) ON B.RefDocNo=DA.VoucherNo and B.RefDocSeqNo=DA.DocSeqNo and DA.InvDocDetailsID is null
				left join ACC_DocDetails D1 with(nolock) ON B.DocNo=D1.VoucherNo
				WHERE DocNo=@VoucherNo AND IsNewReference=0
				UNION
				SELECT B.BillWiseID, B.DocNo BillWiseRefDocNo,CONVERT(DATETIME,B.DocDate) BillWiseRefDocDate, RefDocSeqNo SeqNo,B.AccountID,B.Narration as BillWiseRemarks,
				abs(AdjAmount) BillWiseAmount,abs(B.AmountFC) BillWiseAmountFC,
				isnull(D.BillNo,DA.BillNo) as BillWiseRefBillNo,
				Convert(datetime,isnull(D.BillDate,DA.BillDate)) as BillWiseRefBillDate,
				Convert(datetime,isnull(D.DueDate,DA.DueDate)) as BillWiseRefDocDueDate,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmount,
				(select abs(SUM(BB.AdjAmount/BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmountFC,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID)
				-(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.DocNo=B.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0) BillWiseRefDocUnAdjustedAmount,
				((select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID)
				-(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.DocNo=B.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0))
				/(select abs(SUM(BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocUnAdjustedAmountFC
				,0 as BillWisePrevPaidAmount
				,isnull((select top 1 commonNarration from inv_docdetails with(nolock) where VoucherNo=B.DocNo),(select top 1 commonNarration from ACC_DocDetails with(nolock) where VoucherNo=B.DocNo)) BillWiseRefDocNarration
				,(select top 1 DocNumber from ACC_DocDetails with(nolock) where VoucherNo=B.DocNo) BillWiseRefDocSerialNo
				,0 IsSaveAdjustment
				,(Select TOP 1 Narration from COM_Billwise BB with(nolock) where BB.DocNo=B.RefDocNo AND BB.DocSeqNo=B.RefDocSeqNo AND BB.AccountID=B.AccountID) BillWiseRefDocRemarks
				FROM COM_Billwise B with(nolock)
				left join Inv_DocDetails D with(nolock) ON B.DocNo=D.VoucherNo
				left join ACC_DocDetails DA with(nolock) ON B.DocNo=DA.VoucherNo and DA.InvDocDetailsID is null
				WHERE  B.RefDocNo=@VoucherNo AND IsNewReference=0
				ORDER BY BillWiseID
			END
		END
		ELSE--Returns top 1 bill no,bill date
		BEGIN
			if(@IsLineWisePDC=1 or exists(	select Value from @docPref
			where Name=''UseasCrossDimension'' and Value=''true''))
			BEGIN
				--1
				SELECT DISTINCT B.BillWiseID, B.RefDocNo BillWiseRefDocNo,CONVERT(DATETIME,B.RefDocDate) BillWiseRefDocDate, C1.DocSeqNo SeqNo,B.AccountID,B.Narration as BillWiseRemarks,
				abs(AdjAmount) BillWiseAmount,abs(B.AmountFC) BillWiseAmountFC,
				isnull((select top 1 BillNo from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 BillNo from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo)) BillWiseRefBillNo,
				Convert(datetime,isnull((select top 1 BillDate from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 BillDate from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo))) BillWiseRefBillDate,
				null BillWiseRefDocDueDate,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmount,
				(select abs(SUM(BB.AdjAmount/BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmountFC,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0) BillWiseRefDocUnAdjustedAmount,
				((select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0))
				/(select abs(SUM(BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)  BillWiseRefDocUnAdjustedAmountFC
				,0 as BillWisePrevPaidAmount
				,isnull((select top 1 commonNarration from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 commonNarration from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo)) BillWiseRefDocNarration
				,(select top 1 DocNumber from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo) BillWiseRefDocSerialNo
				,1 IsSaveAdjustment
				,(Select TOP 1 Narration from COM_Billwise BB with(nolock) where BB.DocNo=B.RefDocNo AND BB.DocSeqNo=B.RefDocSeqNo AND BB.AccountID=B.AccountID) BillWiseRefDocRemarks
				FROM COM_Billwise B with(nolock)
				join [ACC_DocDetails] B1 WITH(NOLOCK) on  B.[DocNo] =B1.VoucherNo
				join [ACC_DocDetails] C1 WITH(NOLOCK) on  B1.RefNodeid =C1.AccDocDetailsID
				WHERE C1.VoucherNo=@VoucherNo  AND IsNewReference=0
				ORDER BY B.BillWiseID
			END
			ELSE
			BEGIN
				--1
				SELECT B.BillWiseID, B.RefDocNo BillWiseRefDocNo,CONVERT(DATETIME,B.RefDocDate) BillWiseRefDocDate, B.DocSeqNo SeqNo,B.AccountID,B.Narration as BillWiseRemarks,
				abs(AdjAmount) BillWiseAmount,abs(B.AmountFC) BillWiseAmountFC,
				isnull((select top 1 BillNo from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 BillNo from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo)) BillWiseRefBillNo,
				Convert(datetime,isnull((select top 1 BillDate from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 BillDate from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo))) BillWiseRefBillDate,
				null BillWiseRefDocDueDate,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmount,
				(select abs(SUM(BB.AdjAmount/BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmountFC,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0) BillWiseRefDocUnAdjustedAmount,
				((select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0))
				/(select abs(SUM(BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)  BillWiseRefDocUnAdjustedAmountFC
				
				,( Select ISNULL((ABS(SUM(ISNULL(BB.AdjAmount,0)))),0) from COM_Billwise BB with(nolock)
				left join ACC_DocDetails DD with(nolock) ON BB.DocNo=DD.VoucherNo 
				where B.BillwiseID<>BB.BillwiseID AND B.RefDocNo=BB.RefDocNo and B.AccountID=BB.AccountID 
				and (BB.DocDate+(DD.CreatedDate-FLOOR(DD.CreatedDate))) <=(B.DocDate+(D1.CreatedDate-FLOOR(D1.CreatedDate))) ) BillWisePrevPaidAmount

				,isnull((select top 1 commonNarration from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 commonNarration from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo)) BillWiseRefDocNarration
				,(select top 1 DocNumber from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo) BillWiseRefDocSerialNo
				,1 IsSaveAdjustment
				,(Select TOP 1 Narration from COM_Billwise BB with(nolock) where BB.DocNo=B.RefDocNo AND BB.DocSeqNo=B.RefDocSeqNo AND BB.AccountID=B.AccountID) BillWiseRefDocRemarks
				FROM COM_Billwise B with(nolock)
				left join ACC_DocDetails D1 with(nolock) ON B.DocNo=D1.VoucherNo
				WHERE DocNo=@VoucherNo AND IsNewReference=0
				UNION
				SELECT B.BillWiseID, B.DocNo BillWiseRefDocNo,CONVERT(DATETIME,B.DocDate) BillWiseRefDocDate, RefDocSeqNo SeqNo,B.AccountID,B.Narration as BillWiseRemarks,
				abs(AdjAmount) BillWiseAmount,abs(B.AmountFC) BillWiseAmountFC,
				isnull((select top 1 BillNo from inv_docdetails with(nolock) where VoucherNo=B.DocNo),(select top 1 BillNo from ACC_DocDetails with(nolock) where VoucherNo=B.DocNo)) BillWiseRefBillNo,
				Convert(datetime,isnull((select top 1 BillDate from inv_docdetails with(nolock) where VoucherNo=B.DocNo),(select top 1 BillDate from ACC_DocDetails with(nolock) where VoucherNo=B.DocNo))) BillWiseRefBillDate,
				null BillWiseRefDocDueDate,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmount,
				(select abs(SUM(BB.AdjAmount/BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmountFC,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID)
				-(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.DocNo=B.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0) BillWiseRefDocUnAdjustedAmount,
				((select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID)
				-(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.DocNo=B.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0)) 
				/(select abs(SUM(BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.DocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocUnAdjustedAmountFC
				,0 as BillWisePrevPaidAmount
				,isnull((select top 1 commonNarration from inv_docdetails with(nolock) where VoucherNo=B.DocNo),(select top 1 commonNarration from ACC_DocDetails with(nolock) where VoucherNo=B.DocNo)) BillWiseRefDocNarration
				,(select top 1 DocNumber from ACC_DocDetails with(nolock) where VoucherNo=B.DocNo) BillWiseRefDocSerialNo
				,0 IsSaveAdjustment
				,(Select TOP 1 Narration from COM_Billwise BB with(nolock) where BB.DocNo=B.RefDocNo AND BB.DocSeqNo=B.RefDocSeqNo AND BB.AccountID=B.AccountID) BillWiseRefDocRemarks
				FROM COM_Billwise B with(nolock)
				WHERE  B.RefDocNo=@VoucherNo AND IsNewReference=0
				------------------------ FOR CONVERTED PDC BILL WISE ADJUSTMENT DETAILS
				UNION

				SELECT DISTINCT B.BillWiseID, B.RefDocNo BillWiseRefDocNo,CONVERT(DATETIME,B.RefDocDate) BillWiseRefDocDate, C1.DocSeqNo SeqNo,B.AccountID,B.Narration as BillWiseRemarks,
				abs(AdjAmount) BillWiseAmount,abs(B.AmountFC) BillWiseAmountFC,
				isnull((select top 1 BillNo from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 BillNo from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo)) BillWiseRefBillNo,
				Convert(datetime,isnull((select top 1 BillDate from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 BillDate from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo))) BillWiseRefBillDate,
				null BillWiseRefDocDueDate,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmount,
				(select abs(SUM(BB.AdjAmount/BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID) BillWiseRefDocTotalAmountFC,
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0) BillWiseRefDocUnAdjustedAmount,
				((select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)-
				(select abs(SUM(BB.AdjAmount)) from COM_Billwise BB with(nolock) where BB.RefDocNo=B.RefDocNo and B.AccountID=BB.AccountID and BB.IsNewReference=0))
				/(select abs(SUM(BB.AdjExchRT)) from COM_Billwise BB with(nolock) where B.RefDocNo=BB.DocNo and B.AccountID=BB.AccountID and BB.IsNewReference=1)  BillWiseRefDocUnAdjustedAmountFC
				,0 as BillWisePrevPaidAmount
				,isnull((select top 1 commonNarration from inv_docdetails with(nolock) where VoucherNo=B.RefDocNo),(select top 1 commonNarration from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo)) BillWiseRefDocNarration
				,(select top 1 DocNumber from ACC_DocDetails with(nolock) where VoucherNo=B.RefDocNo) BillWiseRefDocSerialNo
				,1 IsSaveAdjustment
				,(Select TOP 1 Narration from COM_Billwise BB with(nolock) where BB.DocNo=B.RefDocNo AND BB.DocSeqNo=B.RefDocSeqNo AND BB.AccountID=B.AccountID) BillWiseRefDocRemarks
				FROM COM_Billwise B with(nolock)
				join [ACC_DocDetails] B1 WITH(NOLOCK) on  B.[DocNo] =B1.VoucherNo
				join [ACC_DocDetails] C1 WITH(NOLOCK) on  B1.RefCCId=400 and B1.RefNodeid =C1.AccDocDetailsID
				WHERE C1.VoucherNo=@VoucherNo  AND IsNewReference=0
				---------------------------
				ORDER BY BillWiseID
			END
		END
			
		--Amount
		IF @VoucherType NOT IN (16,17,28,29)
		BEGIN
			DECLARE @AccID INT
			
			IF @IsReceipt=1
				SELECT TOP 1 @AccID=(CASE WHEN IsNegative=0 THEN DebitAccount ELSE CreditAccount END)
				FROM ACC_DocDetails WITH(NOLOCK) WHERE VoucherNo=@VoucherNo
				ORDER BY AccDocDetailsID asc
			ELSE
				SELECT TOP 1 @AccID=(CASE WHEN IsNegative=0 THEN CreditAccount ELSE DebitAccount END)
				FROM ACC_DocDetails WITH(NOLOCK) WHERE VoucherNo=@VoucherNo
				ORDER BY AccDocDetailsID asc
				
			DECLARE @Sign INT
			IF @IsReceipt=1
				SET @Sign=1
			ELSE
				SET @Sign=-1
				
			--2 
			SELECT  @Sign*(ISNULL((SELECT SUM(Amount) FROM ACC_DocDetails D WITH(NOLOCK) 
				WHERE VoucherNo=@VoucherNo AND DebitAccount=@AccID),0) -
				ISNULL((SELECT SUM(Amount) FROM ACC_DocDetails D WITH(NOLOCK) 
				WHERE VoucherNo=@VoucherNo AND CreditAccount=@AccID),0)) Amount,
				
				@Sign*(ISNULL((SELECT SUM(AmountFC) FROM ACC_DocDetails D WITH(NOLOCK) 
				WHERE (LinkedAccDocDetailsID IS NULL OR LinkedAccDocDetailsID=0) AND VoucherNo=@VoucherNo AND DebitAccount=@AccID),0) -
				ISNULL((SELECT SUM(AmountFC) FROM ACC_DocDetails D WITH(NOLOCK) 
				WHERE (LinkedAccDocDetailsID IS NULL OR LinkedAccDocDetailsID=0) AND VoucherNo=@VoucherNo AND CreditAccount=@AccID),0)) AmountFC
				
			--3
			SELECT DocSeqNo,DebitAccount AccountID,@Sign*(SUM(Cr)-SUM(Dr)) Amount FROM 
			(SELECT DocSeqNo,DebitAccount,SUM(Amount) Dr, 0.0 Cr FROM ACC_DocDetails D WITH(NOLOCK) 
			WHERE VoucherNo=@VoucherNo GROUP BY DocSeqNo,DebitAccount
			UNION ALL 
			SELECT DocSeqNo,CreditAccount AccountID, 0.0 Dr,SUM(Amount) Cr FROM ACC_DocDetails D WITH(NOLOCK) 
			WHERE VoucherNo=@VoucherNo GROUP BY DocSeqNo,CreditAccount) AS T
			GROUP BY DocSeqNo,DebitAccount
			
			--SELECT * FROM ACC_DocDetails WHERE VoucherNo=@VoucherNo
			SELECT 0 WHERE 1<>1 --4
		END
		ELSE
		BEGIN
			SELECT 0 WHERE 1<>1 --2
			SELECT 0 WHERE 1<>1 --3
			SELECT 0 WHERE 1<>1 --4
		END
	END
	
	---- 5 -> Email On Print
	SELECT COUNT(*) EmailOnPrint
	FROM COM_NotifTemplate N WITH(NOLOCK)
	INNER JOIN COM_NotifTemplateAction NA WITH(NOLOCK) ON NA.TemplateID=N.TemplateID AND NA.ActionID=-1
	WHERE CostCenterID=@DocumentID AND StatusID=383
		
	---- 6-> ATTACHMENTS
	if @Attachments=0
		select '''' [GUID],'''' ActualFileName,'''' FileExtension  ,'''' FolderPath where 1<>1
	else if @Attachments=1
		select [GUID],ActualFileName,FileExtension,isnull(FolderPath,'''') FolderPath from COM_Files with(nolock)
		where FeatureID=@DocumentID AND FeaturePK=@DocumentSeqNo and AllowinPrint=1
	else if @Attachments=2
		select [GUID],max(ActualFileName) ActualFileName,max(FileExtension) FileExtension,max(isnull(FolderPath,'''')) FolderPath from COM_Files with(nolock)
		where GUID IN (select GUID from COM_Files with(nolock)
			where FeatureID=@DocumentID AND FeaturePK=@DocumentSeqNo and AllowinPrint=1)
		GROUP BY [GUID]
		HAVING COUNT([GUID])>1
	else if @Attachments=3
		select [GUID],max(ActualFileName) ActualFileName,max(FileExtension) FileExtension,max(isnull(FolderPath,'''')) FolderPath from COM_Files with(nolock)
		where GUID IN (select GUID from COM_Files with(nolock)
			where FeatureID=@DocumentID AND FeaturePK=@DocumentSeqNo and AllowinPrint=1)
		GROUP BY [GUID]
		HAVING COUNT([GUID])=1
	
	---- 7->	NUMERIC FIELDS
	SELECT C.UserColumnName,convert(int,substring(C.SysColumnName,6,5)) ColIndex,D.Formula,C.SectionID,C.SectionSeqNumber,0 IsAlpha,D.IsCalculate
	FROM ADM_CostCenterDef C WITH(NOLOCK) 
	INNER JOIN ADM_DocumentDef D with(nolock) ON D.CostCenterColID=C.CostCenterColID
	WHERE C.CostCenterID=@DocumentID and C.SysColumnName like ''dcnum%''--AND C.SectionID=4 
	UNION ALL
	SELECT C.UserColumnName,convert(int,substring(C.SysColumnName,8,3)) ColIndex,'''' Formula,C.SectionID,C.SectionSeqNumber,1 IsAlpha,0 IsCalculate--case when C.UserColumnType=''Date'' then 2 else 1 end IsAlpha
	FROM ADM_CostCenterDef C WITH(NOLOCK) 
	WHERE C.CostCenterID=@DocumentID and (C.SysColumnName like ''dcAlpha%'' and C.UserColumnType=''Numeric'') -- or C.UserColumnType=''Date''
	ORDER BY IsAlpha,SectionSeqNumber

	--select *  from COM_Files with(nolock)
	--where FeatureID=@DocumentID AND FeaturePK=@DocumentSeqNo and AllowinPrint=1

	--CHECK AUDIT TRIAL ALLOWED AND INSERTING AUDIT TRIAL DATA
	DECLARE @AuditTrial BIT
	SET @AuditTrial=0
	SELECT @AuditTrial=CONVERT(BIT,PrefValue)  FROM [COM_DocumentPreferences] with(nolock)
	WHERE CostCenterID=@DocumentID AND PrefName=''AuditTrial''
	IF @AuditTrial=1
	BEGIN
		IF @IsInventoryDoc=1
			INSERT INTO INV_DocDetails_History_ATUser(DocType,DocID,VoucherNo,ActionType,ActionTypeID,UserID,CreatedBy,CreatedDate)
			VALUES(@DocumentID,@DocumentSeqNo,@VoucherNo,''Print'',2,@UserID,@UserName,CONVERT(FLOAT,GETDATE()))
		ELSE
			INSERT INTO ACC_DocDetails_History_ATUser(DocType,DocID,VoucherNo,ActionType,ActionTypeID,UserID,CreatedBy,CreatedDate)
			VALUES(@DocumentID,@DocumentSeqNo,@VoucherNo,''Print'',2,@UserID,@UserName,CONVERT(FLOAT,GETDATE()))
	END

---- 8-> GET ADVANCES PAID DETAILS

		SELECT B.ID as AdvanceID,B.DocNo,CONVERT(DATETIME,D.DocDate) as DocDate,B.RefDocNo AdvanceRefDocNo,CONVERT(DATETIME,RD.DocDate) as AdvanceRefDocDate,B.DocSeqNo SeqNo, B.AccountID,abs(B.Amount) AdvanceAmount
		FROM  COM_BillwiseNonAcc B with(nolock)
		left join Inv_DocDetails D with(nolock) ON B.DocNo=D.VoucherNo
		left join Inv_DocDetails RD with(nolock) ON B.RefDocNo=RD.VoucherNo
		WHERE B.DocNo=@VoucherNo 
		ORDER BY B.ID

--- 9 -> GET ACTIVITY DETAILS

	DECLARE @AlpCols NVARCHAR(MAX)
	SET @SQL=''''
	SET @AlpCols=''''
	SELECT @AlpCols=STUFF( (SELECT '',A.''+Name FROM Sys.Columns WITH(NOLOCK) WHERE object_id=OBJECT_ID(''crm_activities'') AND Name Like ''Alpha%''  FOR XML PATH('''') ),1,1,'''') 

	set @SQL=''SELECT A.ActivityID,CASE WHEN ACTIVITYTYPEID=1 THEN ''''Appointment Regular'''' WHEN ACTIVITYTYPEID=2 THEN ''''Task Regular'''' WHEN ACTIVITYTYPEID=3 THEN ''''Appointment Recurring'''' ELSE ''''Task Recurring'''' END AS ActivityTypeID,
	Com_Status.Status as StatusID,Subject,Case when Priority=0 then ''''Low'''' when Priority=1 then ''''Normal'''' else ''''High'''' End as Priority,PctComplete [Complete%],Location,
	case when IsAllDayActivity=0 then ''''No'''' else ''''Yes'''' end IsAllDayActivity,CustomerID,Remarks,Convert(Datetime,A.StartDate) StartDate,convert(Datetime,A.EndDate) EndDate,A.StartTime,A.EndTime
	,CONVERT(VARCHAR(26), CONVERT(DATETIME,AL.StartDate),113) as Activity_StartDateTime, 
	CASE WHEN A.StatusID=12 THEN CONVERT(VARCHAR(26), CONVERT(DATETIME,AL.EndDate),113) ELSE NULL END as Activity_HoldDateTime,
	CASE WHEN A.StatusID=413 THEN CONVERT(VARCHAR(26), CONVERT(DATETIME,AL.EndDate),113) ELSE NULL END as Activity_StopDateTime''
	IF(LEN(@AlpCols)>0)
		SET @SQL+='',''+@AlpCols
	SET @SQL+='' From crm_activities A with(nolock)
	Left Join Com_Status WITH(NOLOCK) on A.StatusID=Com_Status.StatusID
	LEFT JOIN (Select ActivityID,MAX(StartDate) StartDate,MAX(EndDate) EndDate FROM CRM_ActivityLog WITH(NOLOCK) GROUP BY ActivityID ) AL on AL.ActivityID=A.ActivityID
	where  A.costcenterid=''+convert(nvarchar,@DocumentID)+'' and A.nodeid=''+convert(nvarchar,@DocumentSeqNo)
	print @SQL
	exec(@SQL)


 SET NOCOUNT OFF;
RETURN 1
END TRY
BEGIN CATCH  
		--Return exception info [Message,Number,ProcedureName,LineNumber]  
		IF ERROR_NUMBER()=50000
		BEGIN
			SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=@LangID
		END
		ELSE
		BEGIN
			SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() as ErrorNumber, ERROR_PROCEDURE()as ProcedureName, ERROR_LINE() AS ErrorLine
			FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=-999 AND LanguageID=@LangID
		END
 SET NOCOUNT OFF  
RETURN -999   
END CATCH
' 
END
GO
